{"version":3,"sources":["utils/format-date.ts","components/home.tsx","utils/use-space-x.ts","components/error.tsx","components/breadcrumbs.tsx","components/load-more-button.tsx","components/launches.tsx","components/launch.tsx","components/launch-pads.tsx","components/launch-pad.tsx","components/app.tsx","index.tsx"],"names":["LaunchSite","TimeZoneDisplayKind","Home","m","spacing","url","title","PageLink","as","BrowserLink","to","justifyContent","p","boxShadow","borderWidth","rounded","fontSize","ArrowRight","fetcher","args","a","fetch","response","ok","Error","statusText","json","getSpaceXUrl","path","options","searchParams","URLSearchParams","property","append","process","toString","useSpaceX","endpointUrl","useSWR","useSpaceXPaginated","useSWRInfinite","pageIndex","previousPageData","length","offset","limit","formatDateTime","timezone","kind","local","launchSite","Cape_Canaveral","Kennedy_Space_Center","Vandenberg_Air_Force_Base","undefined","user","Intl","DateTimeFormat","year","month","day","hour","minute","second","timeZone","timeZoneName","format","Date","timestamp","alignItems","width","status","variant","flexDirection","textAlign","boxSize","mr","mt","mb","maxWidth","Breadcrumbs","items","separator","ChevronsRight","color","map","item","index","isCurrentPage","Link","label","LoadMoreButton","loadMore","data","pageSize","isLoadingMore","isReachingEnd","my","onClick","disabled","Launches","order","sort","pastLaunches","error","isValidating","setSize","size","minChildWidth","flat","launch","LaunchItem","flight_number","overflow","position","src","links","flickr_images","replace","mission_patch_small","alt","mission_name","height","objectFit","objectPosition","top","right","d","launch_success","px","colorScheme","fontWeight","letterSpacing","textTransform","ml","rocket","rocket_name","launch_site","site_name","lineHeight","isTruncated","launch_date_utc","weekday","timeAgo","Launch","launchId","useParams","details","images","minHeight","LaunchHeader","bgImage","bgPos","bgSize","backgroundRepeat","display","backgroundColor","py","borderRadius","isInline","TimeAndLocation","React","useState","tooltipIsOpen","setTooltipIsOpen","launchDateUserTime","launch_date_local","columns","Watch","site_id","hasArrow","isOpen","onMouseEnter","onMouseLeave","onTouchEnd","marginLeft","MapPin","RouterLink","site_name_long","RocketInfo","cores","first_stage","Navigation","rocket_type","Layers","core","core_serial","join","every","land_success","second_stage","block","payloads","payload","payload_type","Video","maxH","ratio","youtube_id","allowFullScreen","Gallery","image","href","LaunchPads","launchPads","launchPad","LaunchPadItem","attempted_launches","successful_launches","name","vehicles_launched","LaunchPad","launchPadId","launchPadError","pastLaunchesError","location","launches","randomColor","start","end","Math","random","LaunchPadHeader","background","mx","LocationAndVehicles","region","Map","latitude","longitude","RecentLaunches","App","element","NavBar","align","justify","wrap","padding","bg","fontFamily","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.e92b7dd0.chunk.js","sourcesContent":["export const formatDate = (timestamp: Date) => {\n  return new Intl.DateTimeFormat(\"en-US\", {\n    weekday: \"long\",\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n  }).format(new Date(timestamp));\n};\n\nenum LaunchSite {\n  // Cape Canaveral Air Force Station Space Launch Complex 40\n  Cape_Canaveral = \"ccafs_slc_40\",\n  // Kennedy Space Center Historic Launch Complex 39A\n  Kennedy_Space_Center = \"ksc_lc_39a\",\n  // Vandenberg Air Force Base Space Launch Complex 4E\n  Vandenberg_Air_Force_Base = \"vafb_slc_4e\",\n}\n\nexport enum TimeZoneDisplayKind {\n  local,\n  user,\n}\n\ntype TimeZone =\n  | { kind: TimeZoneDisplayKind.local; timestamp: Date; launchSite: string }\n  | { kind: TimeZoneDisplayKind.user; timestamp: Date };\n\n/**\n * @param {string} kind - Display time in local or user dateTime\n * @param {string} timestamp\n * @param {string} launchSite - Used to determine local dateTime\n */\nexport const formatDateTime = (args: TimeZone) => {\n  let timezone;\n  switch (args.kind) {\n    case TimeZoneDisplayKind.local:\n      // https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\n      timezone =\n        args.launchSite ===\n        (LaunchSite.Cape_Canaveral || LaunchSite.Kennedy_Space_Center)\n          ? \"America/New_York\"\n          : args.launchSite === LaunchSite.Vandenberg_Air_Force_Base\n          ? \"America/Los_Angeles\"\n          : // TODO communicate unknown launchSite\n            undefined;\n      break;\n    case TimeZoneDisplayKind.user:\n      // When timeZone is undefined, dateTime is offset to user time\n      timezone = undefined;\n      break;\n    default:\n      // Default to old behavior\n      timezone = undefined;\n      break;\n  }\n  return new Intl.DateTimeFormat(\"en-US\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n    second: \"numeric\",\n    timeZone: timezone,\n    timeZoneName: \"short\",\n  }).format(new Date(args.timestamp));\n};\n","import { Link as BrowserLink } from \"react-router-dom\";\nimport { Flex, Box, Text, Stack, Link } from \"@chakra-ui/react\";\nimport { ArrowRight } from \"react-feather\";\n\n\nexport const Home = () => {\n  return (\n    <Stack m=\"6\" spacing=\"6\">\n      <PageLink url=\"/launches\" title=\"Browse SpaceX Launches\" />\n      <PageLink url=\"/launch-pads\" title=\"Browse SpaceX Launch Pads\" />\n    </Stack>\n  );\n};\n\ntype PageLinkProps = {\n  url: string;\n  title: string,\n};\n\nconst PageLink = ({ url, title }: PageLinkProps) => {\n  return (\n    <Link as={BrowserLink} to={url}>\n      <Flex\n        justifyContent=\"space-between\"\n        p=\"6\"\n        boxShadow=\"md\"\n        borderWidth=\"1px\"\n        rounded=\"lg\"\n      >\n        <Text fontSize=\"lg\">{title}</Text>\n        <Box as={ArrowRight} />\n      </Flex>\n    </Link>\n  );\n};\n","import useSWR, { useSWRInfinite } from \"swr\";\n\nconst fetcher = async (args: RequestInfo) => {\n  const response = await fetch(args);\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n  return await response.json();\n};\n\nconst getSpaceXUrl = (\n  path: string | null,\n  options: {\n    [x: string]: any;\n    limit?: number;\n    order?: string | undefined;\n    sort?: string | undefined;\n    site_id?: string;\n    offset?: number;\n  }\n) => {\n  const searchParams = new URLSearchParams();\n  for (const property in options) {\n    searchParams.append(property, options[property]);\n  }\n\n  const spaceXApiBase = process.env.REACT_APP_SPACEX_API_URL;\n  return `${spaceXApiBase}${path}?${searchParams.toString()}`;\n};\n\nexport const useSpaceX = (\n  path: string | null,\n  options: { limit?: number; order?: string; sort?: string; site_id?: string }\n) => {\n  const endpointUrl = getSpaceXUrl(path, options);\n  return useSWR(path ? endpointUrl : null, fetcher);\n};\n\nexport const useSpaceXPaginated = (\n  path: string,\n  options: { limit: number; order?: string; sort?: string }\n) => {\n  return useSWRInfinite((pageIndex, previousPageData) => {\n    if (previousPageData && !previousPageData.length) {\n      return null;\n    }\n    return getSpaceXUrl(path, {\n      ...options,\n      offset: options.limit * pageIndex,\n    });\n  }, fetcher);\n};\n","import {\n  Flex,\n  Alert,\n  AlertIcon,\n  AlertTitle,\n  AlertDescription,\n} from \"@chakra-ui/react\";\n\nexport const Error = () => {\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"center\" width=\"100%\">\n      <Alert\n        status=\"error\"\n        variant=\"left-accent\"\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n        textAlign=\"center\"\n        p=\"8\"\n      >\n        <AlertIcon boxSize=\"6\" mr={0} />\n        <AlertTitle mt={4} mb={1} fontSize=\"lg\">\n          Problems loading the data\n        </AlertTitle>\n        <AlertDescription maxWidth=\"md\">\n          If the problem persists, try to refresh the page or wait a few minutes\n          and try again.\n        </AlertDescription>\n      </Alert>\n    </Flex>\n  );\n};\n","import {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  Box,\n} from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\nimport { ChevronsRight } from \"react-feather\";\n\ntype BreadcrumbProps = {\n  items: {\n    label: string,\n    to?: string;\n  }[];\n};\n\nexport const Breadcrumbs = ({ items }: BreadcrumbProps) => {\n  return (\n    <Breadcrumb\n      m=\"6\"\n      spacing=\"1\"\n      separator={<Box boxSize=\"1em\" as={ChevronsRight} color=\"gray.300\" />}\n    >\n      {items.map((item, index) => {\n        const isCurrentPage = items.length === index + 1;\n        return (\n          <BreadcrumbItem isCurrentPage={isCurrentPage} key={item.label}>\n            <BreadcrumbLink\n              as={Link}\n              to={item.to || \"\"}\n            >\n              {item.label}\n            </BreadcrumbLink>\n          </BreadcrumbItem>\n        );\n      })}\n    </Breadcrumb>\n  );\n};\n","import { Spinner, Flex, Button } from \"@chakra-ui/react\";\nimport { LaunchPad } from \"./launch-pad\";\nimport { Launch } from \"./launch\";\n\ntype LoadMoreButtonProps = {\n  loadMore: () => any,\n  data?: Launch[][] | LaunchPad[][],\n  pageSize: number,\n  isLoadingMore: boolean;\n};\n\nexport const LoadMoreButton = ({\n  loadMore,\n  data,\n  pageSize,\n  isLoadingMore,\n}: LoadMoreButtonProps) => {\n  const isReachingEnd = data && (data.length === 0 || data[data.length - 1].length < pageSize);\n\n  return (\n    <Flex justifyContent=\"center\" my=\"100px\">\n      <Button onClick={loadMore} disabled={isReachingEnd || isLoadingMore}>\n        {isLoadingMore ? (\n          <Spinner />\n        ) : isReachingEnd ? (\n          \"That's all!\"\n        ) : (\n          \"Show more...\"\n        )}\n      </Button>\n    </Flex>\n  );\n};\n","import { Badge, Box, Image, SimpleGrid, Text, Flex } from \"@chakra-ui/react\";\nimport { format as timeAgo } from \"timeago.js\";\nimport { Link } from \"react-router-dom\";\n\nimport { useSpaceXPaginated } from \"../utils/use-space-x\";\nimport { formatDate } from \"../utils/format-date\";\nimport { Error } from \"./error\";\nimport { Breadcrumbs } from \"./breadcrumbs\";\nimport { LoadMoreButton } from \"./load-more-button\";\nimport { Launch } from \"./launch\";\n\nconst PAGE_SIZE = 12;\n\nexport type PastLaunchesResponse = {\n  data?: Launch[][];\n  error?: Error;\n  isValidating?: boolean;\n  setSize?: (size: number | ((size: number) => number)) => Promise<any[] | undefined>;\n  size?: number;\n};\n\nexport const Launches = () => {\n  const { data: pastLaunches, error, isValidating, setSize, size }: PastLaunchesResponse = useSpaceXPaginated(\n    \"/launches/past\",\n    {\n      limit: PAGE_SIZE,\n      order: \"desc\",\n      sort: \"launch_date_utc\",\n    }\n  );\n\n  return (\n    <>\n      <Breadcrumbs\n        items={[{ label: \"Home\", to: \"/\" }, { label: \"Launches\" }]}\n      />\n      <SimpleGrid m={[2, null, 6]} minChildWidth=\"350px\" spacing=\"4\">\n        {error && <Error />}\n        {pastLaunches && pastLaunches.flat().map((launch) => (\n          <LaunchItem launch={launch} />\n        ))}\n      </SimpleGrid>\n      <LoadMoreButton\n        loadMore={() => setSize(size + 1)}\n        data={pastLaunches}\n        pageSize={PAGE_SIZE}\n        isLoadingMore={isValidating}\n      />\n    </>\n  );\n};\n\ntype LaunchItemProps = {\n  launch: Launch;\n};\n\nexport const LaunchItem = ({ launch }: LaunchItemProps) => {\n  return (\n    <Box\n      as={Link}\n      to={`/launches/${launch.flight_number.toString()}`}\n      boxShadow=\"md\"\n      borderWidth=\"1px\"\n      rounded=\"lg\"\n      overflow=\"hidden\"\n      position=\"relative\"\n    >\n      <Image\n        src={\n          launch.links.flickr_images[0]?.replace(\"_o.jpg\", \"_z.jpg\") ??\n          launch.links.mission_patch_small\n        }\n        alt={`${launch.mission_name} launch`}\n        height={[\"200px\", null, \"300px\"]}\n        width=\"100%\"\n        objectFit=\"cover\"\n        objectPosition=\"bottom\"\n      />\n\n      <Image\n        position=\"absolute\"\n        top=\"5\"\n        right=\"5\"\n        src={launch.links.mission_patch_small}\n        height=\"75px\"\n        objectFit=\"contain\"\n        objectPosition=\"bottom\"\n      />\n\n      <Box p=\"6\">\n        <Box d=\"flex\" alignItems=\"baseline\">\n          {launch.launch_success ? (\n            <Badge px=\"2\" variant=\"solid\" colorScheme=\"green\">\n              Successful\n            </Badge>\n          ) : (\n            <Badge px=\"2\" variant=\"solid\" colorScheme=\"red\">\n              Failed\n            </Badge>\n          )}\n          <Box\n            color=\"gray.500\"\n            fontWeight=\"semibold\"\n            letterSpacing=\"wide\"\n            fontSize=\"xs\"\n            textTransform=\"uppercase\"\n            ml=\"2\"\n          >\n            {launch.rocket.rocket_name} &bull; {launch.launch_site.site_name}\n          </Box>\n        </Box>\n\n        <Box\n          mt=\"1\"\n          fontWeight=\"semibold\"\n          as=\"h4\"\n          lineHeight=\"tight\"\n          isTruncated\n        >\n          {launch.mission_name}\n        </Box>\n        <Flex>\n          <Text fontSize=\"sm\">{formatDate(launch.launch_date_utc)} </Text>\n          <Text color=\"gray.500\" ml=\"2\" fontSize=\"sm\">\n            {timeAgo(launch.launch_date_utc)}\n          </Text>\n        </Flex>\n      </Box>\n    </Box>\n  );\n};\n","import React from \"react\";\nimport { useParams, Link as RouterLink } from \"react-router-dom\";\nimport { format as timeAgo } from \"timeago.js\";\nimport { Watch, MapPin, Navigation, Layers, Info } from \"react-feather\";\nimport {\n  Flex,\n  Heading,\n  Badge,\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatHelpText,\n  SimpleGrid,\n  Box,\n  Text,\n  Spinner,\n  Image,\n  Link,\n  Stack,\n  AspectRatio,\n  StatGroup,\n  Tooltip,\n  Icon,\n} from \"@chakra-ui/react\";\n\nimport { useSpaceX } from \"../utils/use-space-x\";\nimport { formatDateTime, TimeZoneDisplayKind } from \"../utils/format-date\";\nimport { Error } from \"./error\";\nimport { Breadcrumbs } from \"./breadcrumbs\";\n\nexport type Launch = {\n  mission_name: string;\n  flight_number: string;\n  launch_success: string;\n  details: string;\n  launch_date_local: Date;\n  launch_date_utc: Date;\n  rocket: LaunchRocket;\n  launch_site: LaunchSite;\n  links: LaunchLinks;\n};\n\ntype RocketCores = {\n  core_serial: string;\n  land_success: boolean;\n};\n\ntype RocketPayload = {\n  payload_type: string;\n};\n\ntype LaunchRocket = {\n  rocket_name: string;\n  rocket_type: string;\n  first_stage: {\n    cores: RocketCores[];\n  };\n  second_stage: {\n    block: number;\n    payloads: RocketPayload[];\n  };\n};\n\ntype LaunchSite = {\n  site_id: string;\n  site_name: string;\n  site_name_long: string;\n};\n\ntype LaunchLinks = {\n  flickr_images: string[];\n  mission_patch_small: string;\n  youtube_id: string;\n};\n\ntype LaunchesResponse = {\n  data?: Launch;\n  error?: Error;\n};\n\nexport const Launch = () => {\n  const { launchId } = useParams();\n  const { data: launch, error }: LaunchesResponse = useSpaceX(`/launches/${launchId}`, {});\n\n  if (error) return <Error />;\n\n  if (!launch) {\n    return (\n      <Flex justifyContent=\"center\" alignItems=\"center\" minHeight=\"50vh\">\n        <Spinner size=\"lg\" />\n      </Flex>\n    );\n  }\n\n  return (\n    <>\n      <Breadcrumbs\n        items={[\n          { label: \"Home\", to: \"/\" },\n          { label: \"Launches\", to: \"..\" },\n          { label: `#${launch.flight_number}` },\n        ]}\n      />\n      <LaunchHeader launch={launch} />\n      <Box m={[3, 6]}>\n        <TimeAndLocation launch={launch} />\n        <RocketInfo launch={launch} />\n        <Text color=\"gray.700\" fontSize={[\"md\", null, \"lg\"]} my=\"8\">\n          {launch.details}\n        </Text>\n        <Video launch={launch} />\n        <Gallery images={launch.links.flickr_images} />\n      </Box>\n    </>\n  );\n};\n\ntype LaunchHeaderProps = {\n  launch: Launch;\n};\n\nconst LaunchHeader = ({ launch }: LaunchHeaderProps) => {\n  return (\n    <Flex\n      bgImage={`url(${launch.links.flickr_images[0]})`}\n      bgPos=\"center\"\n      bgSize=\"cover\"\n      backgroundRepeat=\"no-repeat\"\n      minHeight=\"30vh\"\n      position=\"relative\"\n      p={[2, 6]}\n      alignItems=\"flex-end\"\n      justifyContent=\"space-between\"\n    >\n      <Image\n        position=\"absolute\"\n        top=\"5\"\n        right=\"5\"\n        src={launch.links.mission_patch_small}\n        height={[\"85px\", \"150px\"]}\n        objectFit=\"contain\"\n        objectPosition=\"bottom\"\n      />\n      <Heading\n        color=\"white\"\n        display=\"inline\"\n        backgroundColor=\"#718096b8\"\n        fontSize={[\"lg\", \"5xl\"]}\n        px=\"4\"\n        py=\"2\"\n        borderRadius=\"lg\"\n      >\n        {launch.mission_name}\n      </Heading>\n      <Stack isInline spacing=\"3\">\n        <Badge colorScheme=\"purple\" fontSize={[\"xs\", \"md\"]}>\n          #{launch.flight_number}\n        </Badge>\n        {launch.launch_success ? (\n          <Badge colorScheme=\"green\" fontSize={[\"xs\", \"md\"]}>\n            Successful\n          </Badge>\n        ) : (\n          <Badge colorScheme=\"red\" fontSize={[\"xs\", \"md\"]}>\n            Failed\n          </Badge>\n        )}\n      </Stack>\n    </Flex>\n  );\n};\n\ntype TimeAndLocationProps = {\n  launch: Launch;\n};\n\nconst TimeAndLocation = ({ launch }: TimeAndLocationProps) => {\n  const [tooltipIsOpen, setTooltipIsOpen] = React.useState(false);\n  const launchDateUserTime = formatDateTime({ kind: TimeZoneDisplayKind.user, timestamp: launch.launch_date_local });\n  return (\n    <SimpleGrid columns={[1, 1, 2]} borderWidth=\"1px\" p=\"4\" borderRadius=\"md\">\n      <Stat>\n        <StatLabel display=\"flex\">\n          <Box as={Watch} width=\"1em\" />{\" \"}\n          <Box ml=\"2\" as=\"span\">\n            Launch Date\n          </Box>\n        </StatLabel>\n        <StatNumber display=\"inline\" fontSize={[\"md\", \"xl\"]}>\n          {formatDateTime({ kind: TimeZoneDisplayKind.local, timestamp: launch.launch_date_local, launchSite: launch.launch_site.site_id })}\n          <Tooltip hasArrow isOpen={tooltipIsOpen} label={launchDateUserTime} >\n            <Icon alt={launchDateUserTime}\n              onMouseEnter={() => setTooltipIsOpen(true)}\n              onMouseLeave={() => setTooltipIsOpen(false)}\n              onTouchEnd={() => setTooltipIsOpen(!tooltipIsOpen)} marginLeft=\"0.2em\">\n              <Info />\n            </Icon>\n          </Tooltip>\n        </StatNumber>\n        <StatHelpText>{timeAgo(launch.launch_date_utc)}</StatHelpText>\n      </Stat>\n      <Stat>\n        <StatLabel display=\"flex\">\n          <Box as={MapPin} width=\"1em\" />{\" \"}\n          <Box ml=\"2\" as=\"span\">\n            Launch Site\n          </Box>\n        </StatLabel>\n        <StatNumber fontSize={[\"md\", \"xl\"]}>\n          <Link\n            as={RouterLink}\n            to={`/launch-pads/${launch.launch_site.site_id}`}\n          >\n            {launch.launch_site.site_name_long}\n          </Link>\n        </StatNumber>\n        <StatHelpText>{launch.launch_site.site_name}</StatHelpText>\n      </Stat>\n    </SimpleGrid>\n  );\n};\n\ntype RocketInfoProps = {\n  launch: Launch;\n};\n\nconst RocketInfo = ({ launch }: RocketInfoProps) => {\n  const cores = launch.rocket.first_stage.cores;\n\n  return (\n    <SimpleGrid\n      columns={[1, 1, 2]}\n      borderWidth=\"1px\"\n      mt=\"4\"\n      p=\"4\"\n      borderRadius=\"md\"\n    >\n      <Stat>\n        <StatLabel display=\"flex\">\n          <Box as={Navigation} width=\"1em\" />{\" \"}\n          <Box ml=\"2\" as=\"span\">\n            Rocket\n          </Box>\n        </StatLabel>\n        <StatNumber fontSize={[\"md\", \"xl\"]}>\n          {launch.rocket.rocket_name}\n        </StatNumber>\n        <StatHelpText>{launch.rocket.rocket_type}</StatHelpText>\n      </Stat>\n      <StatGroup>\n        <Stat>\n          <StatLabel display=\"flex\">\n            <Box as={Layers} width=\"1em\" />{\" \"}\n            <Box ml=\"2\" as=\"span\">\n              First Stage\n            </Box>\n          </StatLabel>\n          <StatNumber fontSize={[\"md\", \"xl\"]}>\n            {cores.map((core: RocketCores) => core.core_serial).join(\", \")}\n          </StatNumber>\n          <StatHelpText>\n            {cores.every((core: RocketCores) => core.land_success)\n              ? cores.length === 1\n                ? \"Recovered\"\n                : \"All recovered\"\n              : \"Lost\"}\n          </StatHelpText>\n        </Stat>\n        <Stat>\n          <StatLabel display=\"flex\">\n            <Box as={Layers} width=\"1em\" />{\" \"}\n            <Box ml=\"2\" as=\"span\">\n              Second Stage\n            </Box>\n          </StatLabel>\n          <StatNumber fontSize={[\"md\", \"xl\"]}>\n            Block {launch.rocket.second_stage.block}\n          </StatNumber>\n          <StatHelpText>\n            Payload:{\" \"}\n            {launch.rocket.second_stage.payloads\n              .map((payload: RocketPayload) => payload.payload_type)\n              .join(\", \")}\n          </StatHelpText>\n        </Stat>\n      </StatGroup>\n    </SimpleGrid>\n  );\n};\n\ntype VideoProps = {\n  launch: Launch;\n};\n\nconst Video = ({ launch }: VideoProps) => {\n  return (\n    <AspectRatio maxH=\"400px\" ratio={1.7}>\n      <Box\n        as=\"iframe\"\n        title={launch.mission_name}\n        src={`https://www.youtube.com/embed/${launch.links.youtube_id}`}\n        allowFullScreen\n      />\n    </AspectRatio>\n  );\n};\n\ntype GalleryProps = {\n  images: LaunchLinks[\"flickr_images\"];\n};\n\nconst Gallery = ({ images }: GalleryProps) => {\n  return (\n    <SimpleGrid my=\"6\" minChildWidth=\"350px\" spacing=\"4\">\n      {images.map((image: string) => (\n        <a href={image} key={image}>\n          <Image src={image.replace(\"_o.jpg\", \"_z.jpg\")} />\n        </a>\n      ))}\n    </SimpleGrid>\n  );\n};\n","import { Badge, Box, SimpleGrid, Text } from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\n\nimport { Error } from \"./error\";\nimport { Breadcrumbs } from \"./breadcrumbs\";\nimport { LoadMoreButton } from \"./load-more-button\";\nimport { useSpaceXPaginated } from \"../utils/use-space-x\";\nimport { LaunchPad } from \"./launch-pad\";\n\nconst PAGE_SIZE = 12;\n\ntype LaunchPadsResponse = {\n  data?: LaunchPad[][];\n  error?: Error;\n  isValidating?: boolean;\n  size?: number;\n  setSize?: (size: number | ((size: number) => number)) => Promise<any[] | undefined>;\n};\n\nexport const LaunchPads = () => {\n  const { data: launchPads, error, isValidating, size, setSize }: LaunchPadsResponse = useSpaceXPaginated(\n    \"/launchpads\",\n    {\n      limit: PAGE_SIZE,\n    }\n  );\n\n  return (\n    <div>\n      <Breadcrumbs\n        items={[{ label: \"Home\", to: \"/\" }, { label: \"Launch Pads\" }]}\n      />\n      <SimpleGrid m={[2, null, 6]} minChildWidth=\"350px\" spacing=\"4\">\n        {error && <Error />}\n        {launchPads && launchPads.flat().map((launchPad) => (\n          <LaunchPadItem key={launchPad.site_id} launchPad={launchPad} />\n        ))}\n      </SimpleGrid>\n      <LoadMoreButton\n        loadMore={() => setSize(size + 1)}\n        data={launchPads}\n        pageSize={PAGE_SIZE}\n        isLoadingMore={isValidating}\n      />\n    </div>\n  );\n};\n\ntype LaunchPadItemProps = {\n  launchPad: LaunchPad;\n};\n\nconst LaunchPadItem = ({ launchPad }: LaunchPadItemProps) => {\n  return (\n    <Box\n      as={Link}\n      to={`/launch-pads/${launchPad.site_id}`}\n      boxShadow=\"md\"\n      borderWidth=\"1px\"\n      rounded=\"lg\"\n      overflow=\"hidden\"\n      position=\"relative\"\n    >\n      <Box p=\"6\">\n        <Box d=\"flex\" alignItems=\"baseline\">\n          {launchPad.status === \"active\" ? (\n            <Badge px=\"2\" variant=\"solid\" colorScheme=\"green\">\n              Active\n            </Badge>\n          ) : (\n            <Badge px=\"2\" variant=\"solid\" colorScheme=\"red\">\n              Retired\n            </Badge>\n          )}\n          <Box\n            color=\"gray.500\"\n            fontWeight=\"semibold\"\n            letterSpacing=\"wide\"\n            fontSize=\"xs\"\n            textTransform=\"uppercase\"\n            ml=\"2\"\n          >\n            {launchPad.attempted_launches} attempted &bull;{\" \"}\n            {launchPad.successful_launches} succeeded\n          </Box>\n        </Box>\n\n        <Box\n          mt=\"1\"\n          fontWeight=\"semibold\"\n          as=\"h4\"\n          lineHeight=\"tight\"\n          isTruncated\n        >\n          {launchPad.name}\n        </Box>\n        <Text color=\"gray.500\" fontSize=\"sm\">\n          {launchPad.vehicles_launched.join(\", \")}\n        </Text>\n      </Box>\n    </Box>\n  );\n};\n","import { useParams } from \"react-router-dom\";\nimport { MapPin, Navigation } from \"react-feather\";\nimport {\n  Flex,\n  Heading,\n  Badge,\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatHelpText,\n  SimpleGrid,\n  Box,\n  Text,\n  Spinner,\n  Stack,\n  AspectRatio,\n} from \"@chakra-ui/react\";\n\nimport { useSpaceX } from \"../utils/use-space-x\";\nimport { Error } from \"./error\";\nimport { Breadcrumbs } from \"./breadcrumbs\";\nimport { LaunchItem, PastLaunchesResponse } from \"./launches\";\nimport { Launch } from \"./launch\";\n\ntype Location = {\n  name: string;\n  region: string;\n  latitude: number;\n  longitude: number;\n};\n\nexport type LaunchPad = {\n  name: string;\n  status: string;\n  location: Location;\n  site_name_long: string;\n  vehicles_launched: string[];\n  attempted_launches: number;\n  successful_launches: number;\n  details: string;\n  site_id: string;\n};\n\ntype LaunchPadsResponse = {\n  data?: LaunchPad;\n  error?: Error;\n};\n\nexport const LaunchPad = () => {\n  const { launchPadId } = useParams();\n  const { data: launchPad, error: launchPadError }: LaunchPadsResponse = useSpaceX(`/launchpads/${launchPadId}`, {});\n  const { data: pastLaunches, error: pastLaunchesError }: PastLaunchesResponse = useSpaceX(launchPad ? \"/launches/past\" : null, {\n    limit: 3,\n    order: \"desc\",\n    sort: \"launch_date_utc\",\n    site_id: launchPad?.site_id,\n  });\n\n  if (launchPadError || pastLaunchesError) return <Error />;\n  if (!launchPad) {\n    return (\n      <Flex justifyContent=\"center\" alignItems=\"center\" minHeight=\"50vh\">\n        <Spinner size=\"lg\" />\n      </Flex>\n    );\n  }\n\n  return (\n    <div>\n      <Breadcrumbs\n        items={[\n          { label: \"Home\", to: \"/\" },\n          { label: \"Launch Pads\", to: \"..\" },\n          { label: launchPad.name },\n        ]}\n      />\n      <LaunchPadHeader launchPad={launchPad} />\n      <Box m={[3, 6]}>\n        <LocationAndVehicles launchPad={launchPad} />\n        <Text color=\"gray.700\" fontSize={[\"md\", null, \"lg\"]} my=\"8\">\n          {launchPad.details}\n        </Text>\n        <Map location={launchPad.location} />\n        {pastLaunches && <RecentLaunches launches={pastLaunches} />}\n      </Box>\n    </div>\n  );\n};\n\nconst randomColor = (start = 200, end = 250) => `hsl(${start + end * Math.random()}, 80%, 90%)`;\n\ntype LaunchPadHeaderProps = {\n  launchPad: LaunchPad;\n};\n\nconst LaunchPadHeader = ({ launchPad }: LaunchPadHeaderProps) => {\n  return (\n    <Flex\n      background={`linear-gradient(${randomColor()}, ${randomColor()})`}\n      bgPos=\"center\"\n      bgSize=\"cover\"\n      backgroundRepeat=\"no-repeat\"\n      minHeight=\"15vh\"\n      position=\"relative\"\n      flexDirection={[\"column\", \"row\"]}\n      p={[2, 6]}\n      alignItems=\"flex-end\"\n      justifyContent=\"space-between\"\n    >\n      <Heading\n        color=\"gray.900\"\n        display=\"inline\"\n        mx={[2, 4]}\n        my=\"2\"\n        fontSize={[\"md\", \"3xl\"]}\n        borderRadius=\"lg\"\n      >\n        {launchPad.site_name_long}\n      </Heading>\n      <Stack isInline spacing=\"3\">\n        <Badge colorScheme=\"purple\" fontSize={[\"sm\", \"md\"]}>\n          {launchPad.successful_launches}/{launchPad.attempted_launches}{\" \"}\n          successful\n        </Badge>\n        {launchPad.status === \"active\" ? (\n          <Badge colorScheme=\"green\" fontSize={[\"sm\", \"md\"]}>\n            Active\n          </Badge>\n        ) : (\n          <Badge colorScheme=\"red\" fontSize={[\"sm\", \"md\"]}>\n            Retired\n          </Badge>\n        )}\n      </Stack>\n    </Flex>\n  );\n};\n\ntype LocationAndVehiclesProps = {\n  launchPad: LaunchPad;\n};\n\nconst LocationAndVehicles = ({ launchPad }: LocationAndVehiclesProps) => {\n  return (\n    <SimpleGrid columns={[1, 1, 2]} borderWidth=\"1px\" p=\"4\" borderRadius=\"md\">\n      <Stat>\n        <StatLabel display=\"flex\">\n          <Box as={MapPin} width=\"1em\" />{\" \"}\n          <Box ml=\"2\" as=\"span\">\n            Location\n          </Box>\n        </StatLabel>\n        <StatNumber fontSize=\"xl\">{launchPad.location.name}</StatNumber>\n        <StatHelpText>{launchPad.location.region}</StatHelpText>\n      </Stat>\n      <Stat>\n        <StatLabel display=\"flex\">\n          <Box as={Navigation} width=\"1em\" />{\" \"}\n          <Box ml=\"2\" as=\"span\">\n            Vehicles\n          </Box>\n        </StatLabel>\n        <StatNumber fontSize=\"xl\">\n          {launchPad.vehicles_launched.join(\", \")}\n        </StatNumber>\n      </Stat>\n    </SimpleGrid>\n  );\n};\n\ntype MapProps = {\n  location: Location;\n};\n\nconst Map = ({ location }: MapProps) => {\n  return (\n    <AspectRatio ratio={16 / 5}>\n      <Box\n        as=\"iframe\"\n        src={`https://maps.google.com/maps?q=${location.latitude}, ${location.longitude}&z=15&output=embed`}\n      />\n    </AspectRatio>\n  );\n};\n\ntype RecentLaunchesProps = {\n  launches: Launch[][];\n};\n\nconst RecentLaunches = ({ launches }: RecentLaunchesProps) => {\n  if (!launches?.length) {\n    return null;\n  }\n  return (\n    <Stack my=\"8\" spacing=\"3\">\n      <Text fontSize=\"xl\" fontWeight=\"bold\">\n        Last launches\n      </Text>\n      <SimpleGrid minChildWidth=\"350px\" spacing=\"4\">\n        {launches.flat().map((launch: Launch) => (\n          <LaunchItem launch={launch} key={launch.flight_number} />\n        ))}\n      </SimpleGrid>\n    </Stack>\n  );\n};\n","import { Route, Routes } from \"react-router-dom\";\nimport { Flex, Text } from \"@chakra-ui/react\";\nimport { Home } from \"./home\";\nimport { Launches } from \"./launches\";\nimport { Launch } from \"./launch\";\nimport { LaunchPads } from \"./launch-pads\";\nimport { LaunchPad } from \"./launch-pad\";\n\n\nexport const App = () => {\n  return (\n    <>\n      <NavBar />\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/launches\" element={<Launches />} />\n        <Route path=\"/launches/:launchId\" element={<Launch />} />\n        <Route path=\"/launch-pads\" element={<LaunchPads />} />\n        <Route path=\"/launch-pads/:launchPadId\" element={<LaunchPad />} />\n      </Routes>\n    </>\n  );\n};\n\nconst NavBar = () => {\n  return (\n    <Flex\n      as=\"nav\"\n      align=\"center\"\n      justify=\"space-between\"\n      wrap=\"wrap\"\n      padding=\"6\"\n      bg=\"gray.800\"\n      color=\"white\"\n    >\n      <Text\n        fontFamily=\"mono\"\n        letterSpacing=\"2px\"\n        fontWeight=\"bold\"\n        fontSize=\"lg\"\n      >\n        ¡SPACE·R0CKETS!\n      </Text>\n    </Flex>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ChakraProvider, CSSReset } from \"@chakra-ui/react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { App } from \"./components/app\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <ChakraProvider>\n        <CSSReset />\n        <App />\n      </ChakraProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}