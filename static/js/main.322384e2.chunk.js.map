{"version":3,"sources":["utils/local-storage.ts","components/Home.tsx","components/Error.tsx","components/Breadcrumbs.tsx","components/LoadMoreButton.tsx","utils/format-date.ts","utils/favorites-context.tsx","components/FavoriteButton.tsx","utils/random-color.ts","components/PreviewCard.tsx","components/Launches.tsx","utils/use-space-x.ts","components/Launch.tsx","components/LaunchPads.tsx","components/LaunchPad.tsx","components/FavoritesDrawer.tsx","components/Navbar.tsx","components/App.tsx","index.tsx"],"names":["ContentKind","Home","m","spacing","url","title","PageLink","as","BrowserLink","to","justifyContent","p","boxShadow","borderWidth","rounded","fontSize","ArrowRight","Error","alignItems","width","status","variant","flexDirection","textAlign","boxSize","mr","mt","mb","maxWidth","Breadcrumbs","items","separator","ChevronsRight","color","map","item","index","isCurrentPage","length","Link","label","LoadMoreButton","loadMore","data","pageSize","isLoadingMore","isReachingEnd","my","onClick","disabled","FAVORITES","LaunchSite","TimeZoneDisplayKind","getFromLocalStorage","favoritesString","window","localStorage","getItem","JSON","parse","updateLocalStorage","category","updatedFavorites","favorites","itemsOfCategory","indexOf","toString","push","setItem","stringify","splice","Object","keys","removeItem","FavoritesContext","createContext","favoritesContext","updateFavorites","useFavoritesContext","useContext","FavoriteButtonKind","formatDateTime","args","timezone","kind","local","launchSite","Cape_Canaveral","Kennedy_Space_Center","Vandenberg_Air_Force_Base","undefined","user","Intl","DateTimeFormat","year","month","day","hour","minute","second","timeZone","timeZoneName","format","Date","timestamp","FavoriteButton","isFavorite","useState","revealText","setRevealText","display","e","preventDefault","onMouseEnter","onMouseLeave","transition","zIndex","size","fill","verticalAlign","opacity","paddingLeft","randomColor","start","end","Math","random","PreviewCard","context","Launches","launches","launch_pads","randomGradient","useMemo","bgImage","launch","links","flickr_images","replace","mission_patch_small","background","flight_number","launchPad","site_id","borderRadius","overflow","position","height","mission_name","name","bgPos","bgSize","backgroundRepeat","direction","boxSizing","includes","LaunchPads","top","right","src","objectFit","objectPosition","margin","d","flexWrap","px","colorScheme","launch_success","fontWeight","letterSpacing","textTransform","rocket","rocket_name","launch_site","site_name","attempted_launches","successful_launches","lineHeight","isTruncated","launch_date_utc","weekday","timeAgo","vehicles_launched","join","isValidating","useEffect","setSize","minChildWidth","error","flat","PAGE_SIZE","fetcher","a","fetch","response","ok","statusText","json","getSpaceXUrl","path","options","searchParams","URLSearchParams","property","append","process","useSpaceX","endpointUrl","useSWR","useSpaceXPaginated","useSWRInfinite","pageIndex","previousPageData","offset","limit","Launch","setIsFavorite","launchId","useParams","details","images","minHeight","LaunchHeader","backgroundColor","py","isInline","TimeAndLocation","tooltipIsOpen","setTooltipIsOpen","launchDateUserTime","launch_date_local","columns","Watch","ml","hasArrow","isOpen","alt","onTouchEnd","marginLeft","MapPin","RouterLink","site_name_long","RocketInfo","cores","first_stage","Navigation","rocket_type","Layers","core","core_serial","every","land_success","second_stage","block","payloads","payload","payload_type","Video","maxH","ratio","youtube_id","allowFullScreen","Gallery","image","href","launchPads","LaunchPad","launchPadId","launchPadError","order","sort","pastLaunches","pastLaunchesError","location","LaunchPadHeader","LocationAndVehicles","region","vehicle","Map","latitude","longitude","RecentLaunches","FavoritesDrawer","useDisclosure","onOpen","onClose","input","setInput","btnRef","useRef","favoriteLaunches","filter","toLowerCase","search","reverse","favoriteLaunchpads","ref","placement","finalFocusRef","onChange","target","value","placeholder","flightNumber","siteId","Navbar","children","align","justify","wrap","padding","bg","fontFamily","App","setFavorites","setLoadMore","mainContainer","handleScroll","current","windowHeight","innerHeight","bottomOfWindow","scrollY","bottomOfContent","offsetHeight","addEventListener","removeEventListener","Provider","element","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"iJAEYA,E,sICECC,EAAO,WAClB,OACE,eAAC,IAAD,CAAOC,EAAE,IAAIC,QAAQ,IAArB,UACE,cAAC,EAAD,CAAUC,IAAI,YAAYC,MAAM,2BAChC,cAAC,EAAD,CAAUD,IAAI,eAAeC,MAAM,kCAUnCC,EAAW,SAAC,GAAmC,IAAjCF,EAAgC,EAAhCA,IAAKC,EAA2B,EAA3BA,MACvB,OACE,cAAC,IAAD,CAAME,GAAIC,IAAaC,GAAIL,EAA3B,SACE,eAAC,IAAD,CACEM,eAAe,gBACfC,EAAE,IACFC,UAAU,KACVC,YAAY,MACZC,QAAQ,KALV,UAOE,cAAC,IAAD,CAAMC,SAAS,KAAf,SAAqBV,IACrB,cAAC,IAAD,CAAKE,GAAIS,Y,kBCrBJC,EAAQ,WACnB,OACE,cAAC,IAAD,CAAMC,WAAW,SAASR,eAAe,SAASS,MAAM,OAAxD,SACE,eAAC,IAAD,CACEC,OAAO,QACPC,QAAQ,cACRC,cAAc,SACdZ,eAAe,SACfa,UAAU,SACVZ,EAAE,IANJ,UAQE,cAAC,IAAD,CAAWa,QAAQ,IAAIC,GAAI,IAC3B,cAAC,IAAD,CAAYC,GAAI,EAAGC,GAAI,EAAGZ,SAAS,KAAnC,uCAGA,cAAC,IAAD,CAAkBa,SAAS,KAA3B,yG,kBCPKC,EAAc,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAC5B,OACE,cAAC,IAAD,CACE5B,EAAE,IACFC,QAAQ,IACR4B,UAAW,cAAC,IAAD,CAAKP,QAAQ,MAAMjB,GAAIyB,IAAeC,MAAM,aAHzD,SAKGH,EAAMI,KAAI,SAACC,EAAMC,GAChB,IAAMC,EAAgBP,EAAMQ,SAAWF,EAAQ,EAC/C,OACE,cAAC,IAAD,CAAgBC,cAAeA,EAA/B,SACE,cAAC,IAAD,CACE9B,GAAIgC,IACJ9B,GAAI0B,EAAK1B,IAAM,GAFjB,SAIG0B,EAAKK,SALyCL,EAAKK,a,kBCfrDC,EAAiB,SAAC,GAKH,IAJ1BC,EAIyB,EAJzBA,SACAC,EAGyB,EAHzBA,KACAC,EAEyB,EAFzBA,SACAC,EACyB,EADzBA,cAEMC,EACJH,IAAyB,IAAhBA,EAAKL,QAAgBK,EAAKA,EAAKL,OAAS,GAAGA,OAASM,GAE/D,OACE,cAAC,IAAD,CAAMlC,eAAe,SAASqC,GAAG,QAAjC,SACE,cAAC,IAAD,CAAQC,QAASN,EAAUO,SAAUH,GAAiBD,EAAtD,SACGA,EACC,cAAC,IAAD,IACEC,EACF,cAEA,oB,OJ5BGI,EAAY,a,SAEblD,K,oBAAAA,E,0BAAAA,M,KAgBL,IKTFmD,EASOC,ELACC,EAAsB,SAAClB,GAClC,IAAMmB,EAAkBC,OAAOC,aAAaC,QAAQtB,GACpD,OAAOmB,EAAkBI,KAAKC,MAAML,GAAmB,MAY5CM,EAAqB,SAChCC,EACA1B,GAEA,IAAI2B,EAEEC,EAAYV,EAAoBH,GACtC,GAAIa,EAAW,CACb,IAAMC,EAAkBD,EAAUF,GAClC,GAAIG,EAEF,IAAkD,IAA9CA,EAAgBC,QAAQ9B,EAAK+B,YAC/BF,EAAgBG,KAAKhC,EAAK+B,YAC1BH,EAAUF,GAAYG,EACtBF,EAAmBC,EACnBR,OAAOC,aAAaY,QAClBlB,EACAQ,KAAKW,UAAUP,QAEZ,CAEL,IAAM1B,EAAQ4B,EAAgBC,QAAQ9B,EAAK+B,YAC3CF,EAAgBM,OAAOlC,EAAO,GAC9B2B,EAAUF,GAAYG,EAEQ,GAA1BA,EAAgB1B,eACXyB,EAAUF,GAEnBC,EAAmBC,EACnBR,OAAOC,aAAaY,QAClBlB,EACAQ,KAAKW,UAAUP,IAGbS,OAAOC,KAAKT,GAAWzB,QAAU,GACnCiB,OAAOC,aAAaiB,WAAWvB,QAKnCa,EAAUF,GAAY,CAAC1B,EAAK+B,YAC5BJ,EAAmBC,EACnBR,OAAOC,aAAaY,QAAQlB,EAAWQ,KAAKW,UAAUP,SAIxDA,EAAgB,eAAMD,EAAW,CAAC1B,EAAK+B,aACvCX,OAAOC,aAAaY,QAAQlB,EAAWQ,KAAKW,UAAUP,KMjE7CY,EAAmBC,wBAAoC,CAClEC,iBAAkBvB,EAAoBH,GACtC2B,gBAAiB,SAAChB,EAAU1B,GAC1ByB,EAAmBC,EAAU1B,GAE7BkB,EAAoBH,MAKX4B,EAAsB,kBAAMC,qBAAWL,I,4BDf/CvB,K,8BAAAA,E,kCAAAA,E,yCAAAA,M,cASOC,O,iBAAAA,I,gBAAAA,M,KAcL,IE5BK4B,EF4BCC,EAAiB,SAACC,GAC7B,IAAIC,EACJ,OAAQD,EAAKE,MACX,KAAKhC,EAAoBiC,MAEvBF,EACED,EAAKI,cACJnC,EAAWoC,gBAAkBpC,EAAWqC,sBACrC,mBACAN,EAAKI,aAAenC,EAAWsC,0BAC/B,2BAEAC,EACN,MACF,KAAKtC,EAAoBuC,KAIzB,QAEER,OAAWO,EAGf,OAAO,IAAIE,KAAKC,eAAe,QAAS,CACtCC,KAAM,UACNC,MAAO,OACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,UACRC,OAAQ,UACRC,SAAUjB,EACVkB,aAAc,UACbC,OAAO,IAAIC,KAAKrB,EAAKsB,a,4BE5DdxB,O,eAAAA,I,oBAAAA,M,KAUL,IAAMyB,EAAiB,SAAC,GAGH,IAF1BC,EAEyB,EAFzBA,WACA7B,EACyB,EADzBA,gBAEA,EAAoC8B,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAOA,OACE,eAAC,IAAD,CACEC,QAAQ,OACRpG,eAAe,aAEfS,MAAOyF,EAAa,OAAS,OAC7BhF,SAAS,cACToB,QAZgB,SAAC+D,GACnBA,EAAEC,iBACFnC,KAWEoC,aAAc,kBAAMJ,GAAc,IAClCK,aAAc,kBAAML,GAAc,IAClCM,WAAW,aACXC,OAAO,IACPC,KAAK,KAXP,UAaE,cAAC,IAAD,CAAMP,QAAQ,SAAd,SACE,cAAC,IAAD,CAAMQ,KAAMZ,EAAa,OAAS,WAEpC,cAAC,IAAD,CACEI,QAAQ,SACRS,cAAc,SACdxG,SAAS,KACTyG,QAASZ,EAAa,EAAI,EAC1BO,WAAW,WACXM,YAAY,QANd,SAQGb,IACEF,EAAa,wBAA0B,0B,QCnDrCgB,EAAc,eAACC,EAAD,uDAAS,IAAKC,EAAd,uDAAoB,IAApB,oBAClBD,EAAQC,EAAMC,KAAKC,SADD,gBCsBdC,EAAc,SAAC,GAAiD,IAAD,MJtBjDvB,EIsBGrE,EAA8C,EAA9CA,KAAM0C,EAAwC,EAAxCA,gBAC1BD,EAAqBE,IAArBF,iBAEFoD,EACJ7F,EAAKiD,OAASpF,EAAYiI,SAA1B,OACIrD,QADJ,IACIA,OADJ,EACIA,EAAkBsD,SADtB,OAEItD,QAFJ,IAEIA,OAFJ,EAEIA,EAAkBuD,YAElBC,EAAiBC,mBACrB,2CAAyBX,IAAzB,aAA2CA,IAA3C,OACA,IAGIY,EACJnG,EAAKiD,OAASpF,EAAYiI,SAA1B,oBACI9F,EAAKoG,OAAOC,MAAMC,cAAc,UADpC,aACI,EAAoCC,QAAQ,SAAU,iBAD1D,QAEIvG,EAAKoG,OAAOC,MAAMG,oBAClB,KAEAC,EAAU,OAAGN,QAAH,IAAGA,IAAWF,EAE9B,OACE,eAAC,IAAD,CACE7H,GAAIgC,IACJ9B,GACE0B,EAAKiD,OAASpF,EAAYiI,SAA1B,oBACiB9F,EAAKoG,OAAOM,eAD7B,uBAEoB1G,EAAK2G,UAAUC,SAErCnI,UAAU,KACVC,YAAY,MACZmI,aAAa,KACbC,SAAS,SAVX,UAYE,eAAC,IAAD,CACEC,SAAS,WACTvI,EAAG,CAAC,EAAG,GACPwI,OACEhH,EAAKiD,OAASpF,EAAYiI,SAAW,CAAC,QAAS,KAAM,SAAW,OAElEK,QAASM,EACTvI,MACE8B,EAAKiD,OAASpF,EAAYiI,SAA1B,UACO9F,EAAKoG,OAAOa,aADnB,qBAEOjH,EAAK2G,UAAUO,KAFtB,eAIFC,MAAM,SACNC,OAAO,QACPC,iBAAiB,YACjB9I,eAAe,gBACf+I,UAAU,SACVC,UAAU,aAjBZ,UAmBE,cAAC,EAAD,CACEhD,WAAU,iBACRsB,QADQ,IACRA,OADQ,EACRA,EAAS2B,SACPjG,KAAKW,UACHlC,EAAKiD,OAASpF,EAAYiI,SACtB9F,EAAKoG,OACLpG,EAAK2G,mBALL,SASVjE,gBAAiB,kBACf1C,EAAKiD,OAASpF,EAAYiI,SACtBpD,EAAgB7E,EAAYiI,SAAU9F,EAAKoG,QAC3C1D,EAAgB7E,EAAY4J,WAAYzH,EAAK2G,cAGpD3G,EAAKiD,OAASpF,EAAYiI,UACzB9F,EAAKoG,OAAOC,MAAMG,qBAChB,cAAC,IAAD,CACEO,SAAS,WACTW,IAAI,IACJC,MAAM,IACNC,IAAK5H,EAAKoG,OAAOC,MAAMG,oBACvBQ,OAAO,OACPa,UAAU,UACVC,eAAe,WAGpB9H,EAAKiD,OAASpF,EAAYiI,WAAaK,GACtC,cAAC,IAAD,CAAM4B,OAAO,OAAb,oCAGJ,eAAC,IAAD,CAAKvJ,EAAE,IAAP,UACE,eAAC,IAAD,CAAKwJ,EAAE,OAAOC,SAAS,OAAOlJ,WAAW,WAAzC,UACGiB,EAAKiD,OAASpF,EAAYiI,SACzB,cAAC,IAAD,CACEoC,GAAG,IACHhJ,QAAQ,QACRiJ,YAAanI,EAAKoG,OAAOgC,eAAiB,QAAU,MACpD9I,GAAG,IAJL,SAMGU,EAAKoG,OAAOgC,eAAiB,aAAe,WAG/C,cAAC,IAAD,CACEF,GAAG,IACHhJ,QAAQ,QACRiJ,YAAuC,WAA1BnI,EAAK2G,UAAU1H,OAAsB,QAAU,MAC5DK,GAAG,IAJL,SAM6B,WAA1BU,EAAK2G,UAAU1H,OAAsB,SAAW,YAGrD,cAAC,IAAD,CACEa,MAAM,WACNuI,WAAW,WACXC,cAAc,OACd1J,SAAS,KACT2J,cAAc,YALhB,SAOGvI,EAAKiD,OAASpF,EAAYiI,SAA1B,UACM9F,EAAKoG,OAAOoC,OAAOC,YADzB,mBAC0CzI,EAAKoG,OAAOsC,YAAYC,WADlE,UAEM3I,EAAK2G,UAAUiC,mBAFrB,6BAEuD5I,EAAK2G,UAAUkC,oBAFtE,mBAKL,cAAC,IAAD,CACEtJ,GAAG,IACH8I,WAAW,WACXjK,GAAG,KACH0K,WAAW,QACXC,aAAW,EALb,SAOG/I,EAAKiD,OAASpF,EAAYiI,SACvB9F,EAAKoG,OAAOa,aACZjH,EAAK2G,UAAUO,OAErB,cAAC,IAAD,CAAMe,SAAS,OAAf,SACGjI,EAAKiD,OAASpF,EAAYiI,SACzB,qCACE,eAAC,IAAD,CAAMlH,SAAS,KAAKU,GAAG,IAAvB,WJ1Ja+E,EI2JCrE,EAAKoG,OAAO4C,gBJ1J/B,IAAIvF,KAAKC,eAAe,QAAS,CACtCuF,QAAS,OACTtF,KAAM,UACNC,MAAO,OACPC,IAAK,YACJM,OAAO,IAAIC,KAAKC,KIqJqC,OAE5C,cAAC,IAAD,CAAMvE,MAAM,WAAWlB,SAAS,KAAhC,SACGsK,YAAQlJ,EAAKoG,OAAO4C,sBAIzB,cAAC,IAAD,CAAMlJ,MAAM,WAAWlB,SAAS,KAAhC,SACGoB,EAAK2G,UAAUwC,kBAAkBC,KAAK,iBCjJxCtD,EAAW,SAAC,GAIH,IAHpBC,EAGmB,EAHnBA,SACAsD,EAEmB,EAFnBA,aACA9I,EACmB,EADnBA,SAEQmC,EAAoBC,IAApBD,gBAQR,OANA4G,qBAAU,WACHD,GACHtD,EAASwD,QAAQxD,EAASb,KAAO,KAElC,CAAC3E,IAGF,qCACE,cAAC,EAAD,CACEZ,MAAO,CAAC,CAAEU,MAAO,OAAQ/B,GAAI,KAAO,CAAE+B,MAAO,eAE/C,eAAC,IAAD,CAAYtC,EAAG,CAAC,EAAG,KAAM,GAAIyL,cAAc,QAAQxL,QAAQ,IAA3D,UACG+H,EAAS0D,OAAS,cAAC,EAAD,IAClB1D,EAASvF,OAAT,OACCuF,QADD,IACCA,OADD,EACCA,EAAUvF,KAAKkJ,OAAO3J,KAAI,SAACqG,GAAD,OACxB,cAAC,EAAD,CAEEpG,KAAM,CAAEiD,KAAMpF,EAAYiI,SAAUM,UACpC1D,gBAAiB,WACfA,EAAgB7E,EAAYiI,SAAUvE,KAAKW,UAAUkE,MAHlDA,EAAOM,sBAQpB,cAAC,EAAD,CACEnG,SAAU,kBAAMwF,EAASwD,QAAQxD,EAASb,KAAO,IACjD1E,KAAMuF,EAASvF,KACfC,SAAUkJ,GACVjJ,cAAe2I,Q,qICnDjBO,GAAO,yCAAG,WAAO7G,GAAP,gBAAA8G,EAAA,sEACSC,MAAM/G,GADf,WACRgH,EADQ,QAEAC,GAFA,sBAGNlL,MAAMiL,EAASE,YAHT,uBAKDF,EAASG,OALR,mFAAH,sDAQPC,GAAe,SACnBC,EACAC,GASA,IAAMC,EAAe,IAAIC,gBACzB,IAAK,IAAMC,KAAYH,EACrBC,EAAaG,OAAOD,EAAUH,EAAQG,IAIxC,MAAM,GAAN,OADsBE,iCACtB,OAA0BN,EAA1B,YAAkCE,EAAavI,aAGpC4I,GAAY,SACvBP,EACAC,GAEA,IAAMO,EAAcT,GAAaC,EAAMC,GACvC,OAAOQ,aAAOT,EAAOQ,EAAc,KAAMhB,KAG9BkB,GAAqB,SAChCV,EACAC,GAEA,OAAOU,cAAe,SAACC,EAAWC,GAChC,OAAIA,IAAqBA,EAAiB9K,OACjC,KAEFgK,GAAaC,EAAD,aAAC,gBACfC,GADc,IAEjBa,OAAQb,EAAQc,MAAQH,OAEzBpB,KCiCQwB,GAAS,WACpB,MAA8CzI,IAAtCF,EAAR,EAAQA,iBAAkBC,EAA1B,EAA0BA,gBAC1B,EAAoC8B,oBAAS,GAA7C,mBAAOD,EAAP,KAAmB8G,EAAnB,KACQC,EAAaC,cAAbD,SACR,EAAkDX,GAAU,aAAD,OAC5CW,GACb,IAFYlF,EAAd,EAAQ5F,KAAciJ,EAAtB,EAAsBA,MActB,OARAH,qBAAU,YACY,OAAhB7G,QAAgB,IAAhBA,OAAA,EAAAA,EAAkBsD,WAAYK,EAChCiF,EAAc5I,EAAiBsD,SAASyB,SAASjG,KAAKW,UAAUkE,KAEhEiF,GAAc,KAEf,CAAC5I,IAEAgH,EAAc,cAAC,EAAD,IAEbrD,EASH,qCACE,cAAC,EAAD,CACEzG,MAAO,CACL,CAAEU,MAAO,OAAQ/B,GAAI,KACrB,CAAE+B,MAAO,WAAY/B,GAAI,aACzB,CAAE+B,MAAM,IAAD,OAAM+F,EAAOM,mBAGxB,cAAC,GAAD,CACEN,OAAQA,EACR7B,WAAYA,EACZ7B,gBAAiB,WACfA,EAAgB7E,EAAYiI,SAAUvE,KAAKW,UAAUkE,OAGzD,eAAC,IAAD,CAAKrI,EAAG,CAAC,EAAG,GAAZ,UACE,cAAC,GAAD,CAAiBqI,OAAQA,IACzB,cAAC,GAAD,CAAYA,OAAQA,IACpB,cAAC,IAAD,CAAMtG,MAAM,WAAWlB,SAAU,CAAC,KAAM,KAAM,MAAOgC,GAAG,IAAxD,SACGwF,EAAOoF,UAEV,cAAC,GAAD,CAAOpF,OAAQA,IACf,cAAC,GAAD,CAASqF,OAAQrF,EAAOC,MAAMC,sBA7BhC,cAAC,IAAD,CAAM/H,eAAe,SAASQ,WAAW,SAAS2M,UAAU,OAA5D,SACE,cAAC,IAAD,CAASxG,KAAK,UAwChByG,GAAe,SAAC,GAII,IAHxBvF,EAGuB,EAHvBA,OACA7B,EAEuB,EAFvBA,WACA7B,EACuB,EADvBA,gBAEA,OACE,eAAC,IAAD,CACEyD,QAAO,cAASC,EAAOC,MAAMC,cAAc,GAApC,KACPa,MAAM,SACNC,OAAO,QACPC,iBAAiB,YACjBqE,UAAU,OACV3E,SAAS,WACTvI,EAAG,CAAC,EAAG,GACPD,eAAe,gBACf+I,UAAU,SATZ,UAWE,cAAC,EAAD,CACE/C,WAAYA,EACZ7B,gBAAiBA,IAEnB,eAAC,IAAD,CACE4E,UAAU,MACVvI,WAAW,WACXR,eAAe,gBAHjB,UAKE,cAAC,IAAD,CACEwI,SAAS,WACTW,IAAI,IACJC,MAAM,IACNC,IAAKxB,EAAOC,MAAMG,oBAClBQ,OAAQ,CAAC,OAAQ,SACjBa,UAAU,UACVC,eAAe,WAEjB,cAAC,KAAD,CACEhI,MAAM,QACN6E,QAAQ,SACRiH,gBAAgB,YAChBhN,SAAU,CAAC,KAAM,OACjBsJ,GAAG,IACH2D,GAAG,IACHhF,aAAa,KAPf,SASGT,EAAOa,eAEV,eAAC,IAAD,CAAO6E,UAAQ,EAAC9N,QAAQ,IAAxB,UACE,eAAC,IAAD,CAAOmK,YAAY,SAASvJ,SAAU,CAAC,KAAM,MAA7C,cACIwH,EAAOM,iBAEVN,EAAOgC,eACN,cAAC,IAAD,CAAOD,YAAY,QAAQvJ,SAAU,CAAC,KAAM,MAA5C,wBAIA,cAAC,IAAD,CAAOuJ,YAAY,MAAMvJ,SAAU,CAAC,KAAM,MAA1C,8BAcNmN,GAAkB,SAAC,GAAsC,IAApC3F,EAAmC,EAAnCA,OACzB,EAA0C5B,oBAAS,GAAnD,mBAAOwH,EAAP,KAAsBC,EAAtB,KACMC,EAAqBpJ,EAAe,CACxCG,KAAMhC,EAAoBuC,KAC1Ba,UAAW+B,EAAO+F,oBAEpB,OACE,eAAC,IAAD,CAAYC,QAAS,CAAC,EAAG,EAAG,GAAI1N,YAAY,MAAMF,EAAE,IAAIqI,aAAa,KAArE,UACE,eAAC,KAAD,WACE,eAAC,KAAD,CAAWlC,QAAQ,OAAnB,UACE,cAAC,IAAD,CAAKvG,GAAIiO,IAAOrN,MAAM,QAAS,IAC/B,cAAC,IAAD,CAAKsN,GAAG,IAAIlO,GAAG,OAAf,4BAIF,eAAC,KAAD,CAAYuG,QAAQ,SAAS/F,SAAU,CAAC,KAAM,MAA9C,UACGkE,EAAe,CACdG,KAAMhC,EAAoBiC,MAC1BmB,UAAW+B,EAAO+F,kBAClBhJ,WAAYiD,EAAOsC,YAAY9B,UAEjC,cAAC,KAAD,CAAS2F,UAAQ,EAACC,OAAQR,EAAe3L,MAAO6L,EAAhD,SACE,cAAC,IAAD,CACEO,IAAKP,EACLpH,aAAc,kBAAMmH,GAAiB,IACrClH,aAAc,kBAAMkH,GAAiB,IACrCS,WAAY,kBAAMT,GAAkBD,IACpCW,WAAW,QALb,SAOE,cAAC,IAAD,WAIN,cAAC,KAAD,UAAezD,YAAQ9C,EAAO4C,sBAEhC,eAAC,KAAD,WACE,eAAC,KAAD,CAAWrE,QAAQ,OAAnB,UACE,cAAC,IAAD,CAAKvG,GAAIwO,IAAQ5N,MAAM,QAAS,IAChC,cAAC,IAAD,CAAKsN,GAAG,IAAIlO,GAAG,OAAf,4BAIF,cAAC,KAAD,CAAYQ,SAAU,CAAC,KAAM,MAA7B,SACE,cAAC,IAAD,CACER,GAAIyO,IACJvO,GAAE,uBAAkB8H,EAAOsC,YAAY9B,SAFzC,SAIGR,EAAOsC,YAAYoE,mBAGxB,cAAC,KAAD,UAAe1G,EAAOsC,YAAYC,mBAUpCoE,GAAa,SAAC,GAAiC,IAA/B3G,EAA8B,EAA9BA,OACd4G,EAAQ5G,EAAOoC,OAAOyE,YAAYD,MAExC,OACE,eAAC,IAAD,CACEZ,QAAS,CAAC,EAAG,EAAG,GAChB1N,YAAY,MACZa,GAAG,IACHf,EAAE,IACFqI,aAAa,KALf,UAOE,eAAC,KAAD,WACE,eAAC,KAAD,CAAWlC,QAAQ,OAAnB,UACE,cAAC,IAAD,CAAKvG,GAAI8O,IAAYlO,MAAM,QAAS,IACpC,cAAC,IAAD,CAAKsN,GAAG,IAAIlO,GAAG,OAAf,uBAIF,cAAC,KAAD,CAAYQ,SAAU,CAAC,KAAM,MAA7B,SACGwH,EAAOoC,OAAOC,cAEjB,cAAC,KAAD,UAAerC,EAAOoC,OAAO2E,iBAE/B,eAAC,KAAD,WACE,eAAC,KAAD,WACE,eAAC,KAAD,CAAWxI,QAAQ,OAAnB,UACE,cAAC,IAAD,CAAKvG,GAAIgP,KAAQpO,MAAM,QAAS,IAChC,cAAC,IAAD,CAAKsN,GAAG,IAAIlO,GAAG,OAAf,4BAIF,cAAC,KAAD,CAAYQ,SAAU,CAAC,KAAM,MAA7B,SACGoO,EAAMjN,KAAI,SAACsN,GAAD,OAAuBA,EAAKC,eAAalE,KAAK,QAE3D,cAAC,KAAD,UACG4D,EAAMO,OAAM,SAACF,GAAD,OAAuBA,EAAKG,gBACpB,IAAjBR,EAAM7M,OACJ,YACA,gBACF,YAGR,eAAC,KAAD,WACE,eAAC,KAAD,CAAWwE,QAAQ,OAAnB,UACE,cAAC,IAAD,CAAKvG,GAAIgP,KAAQpO,MAAM,QAAS,IAChC,cAAC,IAAD,CAAKsN,GAAG,IAAIlO,GAAG,OAAf,6BAIF,eAAC,KAAD,CAAYQ,SAAU,CAAC,KAAM,MAA7B,mBACSwH,EAAOoC,OAAOiF,aAAaC,SAEpC,eAAC,KAAD,sBACW,IACRtH,EAAOoC,OAAOiF,aAAaE,SACzB5N,KAAI,SAAC6N,GAAD,OAA4BA,EAAQC,gBACxCzE,KAAK,mBAYd0E,GAAQ,SAAC,GAA4B,IAA1B1H,EAAyB,EAAzBA,OACf,OACE,cAAC,KAAD,CAAa2H,KAAK,QAAQC,MAAO,IAAjC,SACE,cAAC,IAAD,CACE5P,GAAG,SACHF,MAAOkI,EAAOa,aACdW,IAAG,wCAAmCxB,EAAOC,MAAM4H,YACnDC,iBAAe,OAUjBC,GAAU,SAAC,GAA8B,IAA5B1C,EAA2B,EAA3BA,OACjB,OACE,cAAC,IAAD,CAAY7K,GAAG,IAAI4I,cAAc,QAAQxL,QAAQ,IAAjD,SACGyN,EAAO1L,KAAI,SAACqO,GAAD,OACV,mBAAGC,KAAMD,EAAT,SACE,cAAC,IAAD,CAAOxG,IAAKwG,EAAM7H,QAAQ,SAAU,aADjB6H,SC1VhB3G,GAAa,SAAC,GAIH,IAHtB6G,EAGqB,EAHrBA,WACA/N,EAEqB,EAFrBA,SACA8I,EACqB,EADrBA,aAEQ3G,EAAoBC,IAApBD,gBAQR,OANA4G,qBAAU,WACHD,GACHiF,EAAW/E,QAAQ+E,EAAWpJ,KAAO,KAEtC,CAAC3E,IAGF,eAAC,IAAD,WACE,cAAC,EAAD,CACEZ,MAAO,CAAC,CAAEU,MAAO,OAAQ/B,GAAI,KAAO,CAAE+B,MAAO,kBAE/C,eAAC,IAAD,CAAYtC,EAAG,CAAC,EAAG,KAAM,GAAIyL,cAAc,QAAQxL,QAAQ,IAA3D,UACGsQ,EAAW7E,OAAS,cAAC,EAAD,IACpB6E,EAAW9N,OAAX,OACC8N,QADD,IACCA,OADD,EACCA,EAAY9N,KAAKkJ,OAAO3J,KAAI,SAAC4G,GAAD,OAC1B,cAAC,EAAD,CAEE3G,KAAM,CAAEiD,KAAMpF,EAAY4J,WAAYd,aACtCjE,gBAAiB,WACfA,EACE7E,EAAY4J,WACZlG,KAAKW,UAAUyE,MALdA,EAAUC,gBAWvB,cAAC,EAAD,CACErG,SAAU,kBAAM+N,EAAW/E,QAAQ+E,EAAWpJ,KAAO,IACrD1E,KAAM8N,EAAW9N,KACjBC,SAAUkJ,GACVjJ,cAAe2I,QCHVkF,GAAY,WACvB,IAAQC,EAAgBjD,cAAhBiD,YACR,EACE7D,GAAU,eAAD,OAAgB6D,GAAe,IAD5B7H,EAAd,EAAQnG,KAAwBiO,EAAhC,EAAyBhF,MAEzB,EAAyDkB,GACvDhE,EAAY,iBAAmB,KAC/B,CACEwE,MAAO,EACPuD,MAAO,OACPC,KAAM,kBACN/H,QAAO,OAAED,QAAF,IAAEA,OAAF,EAAEA,EAAWC,UANVgI,EAAd,EAAQpO,KAA2BqO,EAAnC,EAA4BpF,MAU5B,OAAIgF,GAAkBI,EAA0B,cAAC,EAAD,IAC3ClI,EASH,eAAC,IAAD,WACE,cAAC,EAAD,CACEhH,MAAO,CACL,CAAEU,MAAO,OAAQ/B,GAAI,KACrB,CAAE+B,MAAO,cAAe/B,GAAI,gBAC5B,CAAE+B,MAAOsG,EAAUO,SAGvB,cAAC,GAAD,CAAiBP,UAAWA,IAC5B,eAAC,IAAD,CAAK5I,EAAG,CAAC,EAAG,GAAZ,UACE,cAAC,GAAD,CAAqB4I,UAAWA,IAChC,cAAC,IAAD,CAAM7G,MAAM,WAAWlB,SAAU,CAAC,KAAM,KAAM,MAAOgC,GAAG,IAAxD,SACG+F,EAAU6E,UAEb,cAAC,GAAD,CAAKsD,SAAUnI,EAAUmI,WACxBF,GAAgB,cAAC,GAAD,CAAgB7I,SAAU6I,UAtB7C,cAAC,IAAD,CAAMrQ,eAAe,SAASQ,WAAW,SAAS2M,UAAU,OAA5D,SACE,cAAC,IAAD,CAASxG,KAAK,UA+BT6J,GAAkB,SAAC,GAAyC,IAAvCpI,EAAsC,EAAtCA,UAChC,EAA8ChE,IAAtCF,EAAR,EAAQA,iBAAkBC,EAA1B,EAA0BA,gBAC1B,EAAoC8B,oBAAS,GAA7C,mBAAOD,EAAP,KAAmB8G,EAAnB,KACMpF,EAAiBC,mBACrB,2CAAyBX,IAAzB,aAA2CA,IAA3C,OACA,IAaF,OATA+D,qBAAU,YACR,OAAI7G,QAAJ,IAAIA,OAAJ,EAAIA,EAAkBuD,aACpBqF,EACE5I,EAAiBuD,YAAYwB,SAASjG,KAAKW,UAAUyE,KAGvD0E,GAAc,KAEf,CAAC5I,IAEF,eAAC,IAAD,CACEgE,WAAYR,EACZkB,MAAM,SACNC,OAAO,QACPC,iBAAiB,YACjBqE,UAAU,OACV3E,SAAS,WACTvI,EAAG,CAAC,EAAG,GACPD,eAAe,gBACf+I,UAAU,SATZ,UAWE,cAAC,EAAD,CACE/C,WAAYA,EACZ7B,gBAAiB,WACfA,EAAgB7E,EAAY4J,WAAYlG,KAAKW,UAAUyE,OAG3D,eAAC,IAAD,CACEW,UAAU,MACVvI,WAAW,WACXR,eAAe,gBAHjB,UAKE,cAAC,KAAD,CACEuB,MAAM,WACN6E,QAAQ,SACRuD,GAAG,IACH2D,GAAG,IACHjN,SAAU,CAAC,KAAM,OACjBiI,aAAa,KANf,SAQGF,EAAUmG,iBAEb,eAAC,IAAD,CAAOhB,UAAQ,EAAC9N,QAAQ,IAAxB,UACE,eAAC,IAAD,CAAOmK,YAAY,SAASvJ,SAAU,CAAC,KAAM,MAA7C,UACG+H,EAAUkC,oBADb,IACmClC,EAAUiC,mBAAoB,IADjE,gBAIsB,WAArBjC,EAAU1H,OACT,cAAC,IAAD,CAAOkJ,YAAY,QAAQvJ,SAAU,CAAC,KAAM,MAA5C,oBAIA,cAAC,IAAD,CAAOuJ,YAAY,MAAMvJ,SAAU,CAAC,KAAM,MAA1C,+BAcNoQ,GAAsB,SAAC,GAA6C,IAA3CrI,EAA0C,EAA1CA,UAC7B,OACE,eAAC,IAAD,CAAYyF,QAAS,CAAC,EAAG,EAAG,GAAI1N,YAAY,MAAMF,EAAE,IAAIqI,aAAa,KAArE,UACE,eAAC,KAAD,WACE,eAAC,KAAD,CAAWlC,QAAQ,OAAnB,UACE,cAAC,IAAD,CAAKvG,GAAIwO,IAAQ5N,MAAM,QAAS,IAChC,cAAC,IAAD,CAAKsN,GAAG,IAAIlO,GAAG,OAAf,yBAIF,cAAC,KAAD,CAAYQ,SAAS,KAArB,SAA2B+H,EAAUmI,SAAS5H,OAC9C,cAAC,KAAD,UAAeP,EAAUmI,SAASG,YAEpC,eAAC,KAAD,WACE,eAAC,KAAD,CAAWtK,QAAQ,OAAnB,UACE,cAAC,IAAD,CAAKvG,GAAI8O,IAAYlO,MAAM,QAAS,IACpC,cAAC,IAAD,CAAKsN,GAAG,IAAIlO,GAAG,OAAf,kCAIF,cAAC,KAAD,CAAYQ,SAAS,KAArB,SACG+H,EAAUwC,kBAAkBpJ,KAAI,SAACmP,GAAD,OAC/B,eAAC,WAAD,WACGA,EACD,sCAaRC,GAAM,SAAC,GAA4B,IAA1BL,EAAyB,EAAzBA,SACb,OACE,cAAC,KAAD,CAAad,MAAO,IAApB,SACE,cAAC,IAAD,CACE5P,GAAG,SACHwJ,IAAG,yCAAoCkH,EAASM,SAA7C,aAA0DN,EAASO,UAAnE,2BAULC,GAAiB,SAAC,GAAuC,IAArCvJ,EAAoC,EAApCA,SACxB,OAAI,OAACA,QAAD,IAACA,OAAD,EAACA,EAAU5F,QAIb,eAAC,IAAD,CAAOS,GAAG,IAAI5C,QAAQ,IAAtB,UACE,cAAC,IAAD,CAAMY,SAAS,KAAKyJ,WAAW,OAA/B,2BAGA,cAAC,IAAD,CAAYmB,cAAc,QAAQxL,QAAQ,IAA1C,SACG+H,EAAS2D,OAAO3J,KAAI,SAACqG,GAAD,OACnB,cAAC,EAAD,CAEEpG,KAAM,CAAEiD,KAAMpF,EAAYiI,SAAUM,UACpC1D,gBAAiB,kBAAM,OAFlB0D,EAAOM,uBAVb,M,uCCnNE6I,GAAkB,WAAO,IAAD,IACnC,EAA8C3M,qBAAWL,GAAjDE,EAAR,EAAQA,iBAAkBC,EAA1B,EAA0BA,gBAC1B,EAAoC8M,eAA5BhD,EAAR,EAAQA,OAAQiD,EAAhB,EAAgBA,OAAQC,EAAxB,EAAwBA,QACxB,EAAoClL,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOmL,EAAP,KAAcC,EAAd,KACMC,EAASC,iBAAO,MAEhBC,EAAgB,OAAGtN,QAAH,IAAGA,GAAH,UAAGA,EAAkBsD,gBAArB,aAAG,EACrBiK,QACA,SAAChQ,GAAD,OAAsE,IAApDA,EAAKiQ,cAAcC,OAAOP,EAAMM,kBAGnDE,UACGC,EAAkB,OAAG3N,QAAH,IAAGA,GAAH,UAAGA,EAAkBuD,mBAArB,aAAG,EACvBgK,QACA,SAAChQ,GAAD,OAAsE,IAApDA,EAAKiQ,cAAcC,OAAOP,EAAMM,kBAGnDE,UAEH,OAAKJ,GAAqBK,EAKxB,qCACE,eAAC,IAAD,CACEC,IAAKR,EACL1H,YAAY,OACZtH,QAAS4O,EACT3P,MAAM,QACN6E,QAAQ,OACRpG,eAAe,aAEfS,MAAOyF,EAAa,OAAS,OAC7BhF,SAAS,cACTqF,aAAc,kBAAMJ,GAAc,IAClCK,aAAc,kBAAML,GAAc,IAClCM,WAAW,aACXE,KAAK,KAbP,UAeE,cAAC,IAAD,CAAMP,QAAQ,SAAd,SACE,cAAC,IAAD,CAAMQ,KAAK,WAEb,cAAC,IAAD,CAAMG,YAAY,QAAlB,SAA2Bb,GAAc,sBAE3C,eAAC,KAAD,CACE+H,OAAQA,EACR8D,UAAU,QACVZ,QAASA,EACTa,cAAeV,EAJjB,UAME,cAAC,KAAD,IACA,eAAC,KAAD,WACE,cAAC,KAAD,IACA,cAAC,KAAD,CAAcjR,SAAS,MAAvB,uBACA,eAAC,KAAD,WACE,cAAC,KAAD,CACE4R,SAAU,SAAC5L,GACTgL,EAAShL,EAAE6L,OAAOC,QAEpBC,YAAY,8BAEbZ,GACC,cAAC,IAAD,CACEnR,SAAS,KACTyJ,WAAW,OACXtK,EAAE,QAHJ,6BAIegS,EAAiB5P,OAJhC,OAMF,cAAC,IAAD,CAAYnC,QAAQ,IAApB,gBACG+R,QADH,IACGA,OADH,EACGA,EAAkBhQ,KAAI,SAACqG,GACtB,IAAMwK,EAAerP,KAAKC,MAAM4E,GAAQM,cACxC,OACE,cAAC,EAAD,CAEE1G,KAAM,CACJiD,KAAMpF,EAAYiI,SAClBM,OAAQ7E,KAAKC,MAAM4E,IAErB1D,gBAAiB,kBACfA,EAAgB7E,EAAYiI,SAAUM,KANnCwK,QAYZR,GACC,cAAC,IAAD,CACExR,SAAS,KACTyJ,WAAW,OACXtK,EAAE,QAHJ,gCAIkBqS,EAAmBjQ,OAJrC,OAMF,cAAC,IAAD,CAAYnC,QAAQ,IAApB,gBACGoS,QADH,IACGA,OADH,EACGA,EAAoBrQ,KAAI,SAAC4G,GACxB,IAAMkK,EAAStP,KAAKC,MAAMmF,GAAWC,QACrC,OACE,cAAC,EAAD,CAEE5G,KAAM,CACJiD,KAAMpF,EAAY4J,WAClBd,UAAWpF,KAAKC,MAAMmF,IAExBjE,gBAAiB,kBACfA,EAAgB7E,EAAY4J,WAAYd,KANrCkK,oBA9Ed,MCtCEC,GAAa,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3B,OACE,eAAC,IAAD,CACE3S,GAAG,MACH4S,MAAM,SACNC,QAAQ,gBACRC,KAAK,OACLC,QAAQ,IACRC,GAAG,WACHtR,MAAM,QAPR,UASE,cAAC,IAAD,CACEuR,WAAW,OACX/I,cAAc,MACdD,WAAW,OACXzJ,SAAS,KAJX,mCAQCmS,MCDMpH,GAAY,GAEZ2H,GAAM,WACjB,MAAkC9M,mBAChCtD,EAAoBH,IADtB,mBAAOa,EAAP,KAAkB2P,EAAlB,KAGA,EAAgC/M,oBAAS,GAAzC,mBAAOjE,EAAP,KAAiBiR,EAAjB,KACMC,EAAgB3B,iBAAuB,MAEvC/J,EACJ+E,GAAmB,iBAAkB,CACnCK,MAAOxB,GACP+E,MAAO,OACPC,KAAM,oBAGJL,EACJxD,GAAmB,cAAe,CAChCK,MAAOxB,KAGL+H,EAAe,WACnB,GAAID,EAAcE,QAAS,CACzB,IAAMC,EAAexQ,OAAOyQ,YACtBC,EAAiBF,EAAexQ,OAAO2Q,QACvCC,EAAkBP,EAAcE,QAAQM,aAK5CT,KAHuBM,GAAkBE,EAAkBJ,MAiBjE,OAPAtI,qBAAU,WAER,OADAlI,OAAO8Q,iBAAiB,SAAUR,GAC3B,WACLtQ,OAAO+Q,oBAAoB,SAAUT,MAEtC,IAGD,cAAC,IAAD,CAAKrB,IAAKoB,EAAV,SACE,eAAClP,EAAiB6P,SAAlB,CACE1B,MAAO,CACLjO,iBAAkBb,EAClBc,gBAAiB,SAAChB,EAAuB1B,GACvCyB,EAAmBC,EAAU1B,GAC7BuR,EAAarQ,EAAoBH,MALvC,UASE,cAAC,GAAD,UAASa,GAAa,cAAC,GAAD,MACtB,eAAC,IAAD,WACE,cAAC,IAAD,CAAOwI,KAAK,IAAIiI,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CACEjI,KAAK,YACLiI,QACEtM,GACE,cAAC,EAAD,CACEA,SAAUA,EACVsD,aAActD,EAASsD,aACvB9I,SAAUA,MAKlB,cAAC,IAAD,CAAO6J,KAAK,sBAAsBiI,QAAS,cAAC,GAAD,MAC3C,cAAC,IAAD,CACEjI,KAAK,eACLiI,QACE/D,GACE,cAAC,GAAD,CACEA,WAAYA,EACZjF,aAAciF,EAAWjF,aACzB9I,SAAUA,MAKlB,cAAC,IAAD,CAAO6J,KAAK,4BAA4BiI,QAAS,cAAC,GAAD,eClG3DC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAQC,SAAU/H,yBAAlB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,IACA,cAAC,GAAD,WAINgI,SAASC,eAAe,W","file":"static/js/main.322384e2.chunk.js","sourcesContent":["export const FAVORITES = \"favorites\";\n\nexport enum ContentKind {\n  Launches = \"launches\",\n  LaunchPads = \"launch_pads\",\n}\n\n// Shape of Favorites\n// {\n//   launches: [\"123\", \"456\"],\n//   launch_pads: [\"789\", \"012\"]\n// }\nexport type Favorites = { [key in ContentKind]: string[] } | null;\n/**\n * Gets item from localStorage and returns JSON parsed value\n * @param {string} item\n * @returns {Favorites}\n */\nexport const getFromLocalStorage = (item: string): Favorites => {\n  const favoritesString = window.localStorage.getItem(item);\n  return favoritesString ? JSON.parse(favoritesString) : null;\n};\n\n// TODO Refactor to improve legibility\n/**\n * Updates the favorites in local storage by adding an item to a category or removing an item if it's already there.\n * If a category has no items, removes category.\n * If no item is favorited, favorites is removed from localStorage entirely.\n * @param {ContentKind} category\n * @param {string} item\n * @returns {void}\n */\nexport const updateLocalStorage = (\n  category: ContentKind,\n  item: string\n): void => {\n  let updatedFavorites;\n  // Get the existing data\n  const favorites = getFromLocalStorage(FAVORITES);\n  if (favorites) {\n    const itemsOfCategory = favorites[category];\n    if (itemsOfCategory) {\n      // Only push if item not already there\n      if (itemsOfCategory.indexOf(item.toString()) === -1) {\n        itemsOfCategory.push(item.toString());\n        favorites[category] = itemsOfCategory;\n        updatedFavorites = favorites;\n        window.localStorage.setItem(\n          FAVORITES,\n          JSON.stringify(updatedFavorites)\n        );\n      } else {\n        // If item already present, remove it\n        const index = itemsOfCategory.indexOf(item.toString());\n        itemsOfCategory.splice(index, 1);\n        favorites[category] = itemsOfCategory;\n        // If category has no items, remove category\n        if (itemsOfCategory.length == 0) {\n          delete favorites[category];\n        }\n        updatedFavorites = favorites;\n        window.localStorage.setItem(\n          FAVORITES,\n          JSON.stringify(updatedFavorites)\n        );\n        // If favorites is empty, delete from localStorage\n        if (Object.keys(favorites).length <= 0) {\n          window.localStorage.removeItem(FAVORITES);\n        }\n      }\n    } else {\n      // If category doesn't exist, create it\n      favorites[category] = [item.toString()];\n      updatedFavorites = favorites;\n      window.localStorage.setItem(FAVORITES, JSON.stringify(updatedFavorites));\n    }\n  } else {\n    // If no favorites, create favorites object\n    updatedFavorites = { [category]: [item.toString()] };\n    window.localStorage.setItem(FAVORITES, JSON.stringify(updatedFavorites));\n  }\n};\n","import { Link as BrowserLink } from \"react-router-dom\";\nimport { Flex, Box, Text, Stack, Link } from \"@chakra-ui/react\";\nimport { ArrowRight } from \"react-feather\";\n\nexport const Home = () => {\n  return (\n    <Stack m=\"6\" spacing=\"6\">\n      <PageLink url=\"/launches\" title=\"Browse SpaceX Launches\" />\n      <PageLink url=\"/launch-pads\" title=\"Browse SpaceX Launch Pads\" />\n    </Stack>\n  );\n};\n\ntype PageLinkProps = {\n  url: string;\n  title: string,\n};\n\nconst PageLink = ({ url, title }: PageLinkProps) => {\n  return (\n    <Link as={BrowserLink} to={url}>\n      <Flex\n        justifyContent=\"space-between\"\n        p=\"6\"\n        boxShadow=\"md\"\n        borderWidth=\"1px\"\n        rounded=\"lg\"\n      >\n        <Text fontSize=\"lg\">{title}</Text>\n        <Box as={ArrowRight} />\n      </Flex>\n    </Link>\n  );\n};\n","import {\n  Flex,\n  Alert,\n  AlertIcon,\n  AlertTitle,\n  AlertDescription,\n} from \"@chakra-ui/react\";\n\nexport const Error = () => {\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"center\" width=\"100%\">\n      <Alert\n        status=\"error\"\n        variant=\"left-accent\"\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n        textAlign=\"center\"\n        p=\"8\"\n      >\n        <AlertIcon boxSize=\"6\" mr={0} />\n        <AlertTitle mt={4} mb={1} fontSize=\"lg\">\n          Problems loading the data\n        </AlertTitle>\n        <AlertDescription maxWidth=\"md\">\n          If the problem persists, try to refresh the page or wait a few minutes\n          and try again.\n        </AlertDescription>\n      </Alert>\n    </Flex>\n  );\n};\n","import {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  Box,\n} from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\nimport { ChevronsRight } from \"react-feather\";\n\ntype BreadcrumbProps = {\n  items: {\n    label: string,\n    to?: string;\n  }[];\n};\n\nexport const Breadcrumbs = ({ items }: BreadcrumbProps) => {\n  return (\n    <Breadcrumb\n      m=\"6\"\n      spacing=\"1\"\n      separator={<Box boxSize=\"1em\" as={ChevronsRight} color=\"gray.300\" />}\n    >\n      {items.map((item, index) => {\n        const isCurrentPage = items.length === index + 1;\n        return (\n          <BreadcrumbItem isCurrentPage={isCurrentPage} key={item.label}>\n            <BreadcrumbLink\n              as={Link}\n              to={item.to || \"\"}\n            >\n              {item.label}\n            </BreadcrumbLink>\n          </BreadcrumbItem>\n        );\n      })}\n    </Breadcrumb>\n  );\n};\n","import { Spinner, Flex, Button } from \"@chakra-ui/react\";\nimport { LaunchPad } from \"./LaunchPad\";\nimport { Launch } from \"./Launch\";\n\ntype LoadMoreButtonProps = {\n  loadMore: () => void;\n  data?: Launch[][] | LaunchPad[][];\n  pageSize: number;\n  isLoadingMore: boolean;\n};\n\nexport const LoadMoreButton = ({\n  loadMore,\n  data,\n  pageSize,\n  isLoadingMore,\n}: LoadMoreButtonProps) => {\n  const isReachingEnd =\n    data && (data.length === 0 || data[data.length - 1].length < pageSize);\n\n  return (\n    <Flex justifyContent=\"center\" my=\"100px\">\n      <Button onClick={loadMore} disabled={isReachingEnd || isLoadingMore}>\n        {isLoadingMore ? (\n          <Spinner />\n        ) : isReachingEnd ? (\n          \"That's all!\"\n        ) : (\n          \"Show more...\"\n        )}\n      </Button>\n    </Flex>\n  );\n};\n","export const formatDate = (timestamp: Date) => {\n  return new Intl.DateTimeFormat(\"en-US\", {\n    weekday: \"long\",\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n  }).format(new Date(timestamp));\n};\n\nenum LaunchSite {\n  // Cape Canaveral Air Force Station Space Launch Complex 40\n  Cape_Canaveral = \"ccafs_slc_40\",\n  // Kennedy Space Center Historic Launch Complex 39A\n  Kennedy_Space_Center = \"ksc_lc_39a\",\n  // Vandenberg Air Force Base Space Launch Complex 4E\n  Vandenberg_Air_Force_Base = \"vafb_slc_4e\",\n}\n\nexport enum TimeZoneDisplayKind {\n  local,\n  user,\n}\n\ntype TimeZone =\n  | { kind: TimeZoneDisplayKind.local; timestamp: Date; launchSite: string }\n  | { kind: TimeZoneDisplayKind.user; timestamp: Date };\n\n/**\n * @param {string} kind - Display time in local or user dateTime\n * @param {string} timestamp\n * @param {string} launchSite - Used to determine local dateTime\n */\nexport const formatDateTime = (args: TimeZone) => {\n  let timezone;\n  switch (args.kind) {\n    case TimeZoneDisplayKind.local:\n      // https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\n      timezone =\n        args.launchSite ===\n        (LaunchSite.Cape_Canaveral || LaunchSite.Kennedy_Space_Center)\n          ? \"America/New_York\"\n          : args.launchSite === LaunchSite.Vandenberg_Air_Force_Base\n          ? \"America/Los_Angeles\"\n          : // TODO communicate unknown launchSite\n            undefined;\n      break;\n    case TimeZoneDisplayKind.user:\n      // When timeZone is undefined, dateTime is offset to user time\n      timezone = undefined;\n      break;\n    default:\n      // Default to old behavior\n      timezone = undefined;\n      break;\n  }\n  return new Intl.DateTimeFormat(\"en-US\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n    second: \"numeric\",\n    timeZone: timezone,\n    timeZoneName: \"short\",\n  }).format(new Date(args.timestamp));\n};\n","import { createContext, useContext } from \"react\";\nimport {\n  Favorites,\n  getFromLocalStorage,\n  FAVORITES,\n  ContentKind,\n  updateLocalStorage,\n} from \"./local-storage\";\n\nexport type FavoritesContextType = {\n  favoritesContext: Favorites;\n  updateFavorites: (category: ContentKind, item: string) => void;\n};\n\nexport const FavoritesContext = createContext<FavoritesContextType>({\n  favoritesContext: getFromLocalStorage(FAVORITES),\n  updateFavorites: (category, item) => {\n    updateLocalStorage(category, item);\n    // TODO Verify if necessary\n    getFromLocalStorage(FAVORITES);\n  },\n});\n\n// // Custom hook to get the favorites context\nexport const useFavoritesContext = () => useContext(FavoritesContext);\n","import { Button, Icon, Text } from \"@chakra-ui/react\";\nimport { MouseEvent, useState } from \"react\";\nimport { Star } from \"react-feather\";\n\nexport enum FavoriteButtonKind {\n  List,\n  Detail,\n}\n\ntype FavoriteButtonProps = {\n  isFavorite: boolean;\n  updateFavorites: () => void;\n};\n\nexport const FavoriteButton = ({\n  isFavorite,\n  updateFavorites,\n}: FavoriteButtonProps) => {\n  const [revealText, setRevealText] = useState(false);\n\n  const handleClick = (e: MouseEvent) => {\n    e.preventDefault();\n    updateFavorites();\n  };\n\n  return (\n    <Button\n      display=\"flex\"\n      justifyContent=\"flex-start\"\n      // TODO Achtung, magic number!\n      width={revealText ? \"100%\" : \"38px\"}\n      maxWidth=\"max-content\"\n      onClick={handleClick}\n      onMouseEnter={() => setRevealText(true)}\n      onMouseLeave={() => setRevealText(false)}\n      transition=\"width 0.2s\"\n      zIndex=\"1\"\n      size=\"sm\"\n    >\n      <Icon display=\"inline\">\n        <Star fill={isFavorite ? \"gold\" : \"none\"} />\n      </Icon>\n      <Text\n        display=\"inline\"\n        verticalAlign=\"middle\"\n        fontSize=\"sm\"\n        opacity={revealText ? 1 : 0}\n        transition=\"all 0.3s\"\n        paddingLeft=\"0.5em\"\n      >\n        {revealText &&\n          (isFavorite ? \"Remove from favorites\" : \"Mark as favorite\")}\n      </Text>\n    </Button>\n  );\n};\n","export const randomColor = (start = 200, end = 250) =>\n  `hsl(${start + end * Math.random()}, 80%, 90%)`;\n","import { Box, Flex, Badge, Image, Text } from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\nimport { formatDate } from \"../utils/format-date\";\nimport { FavoriteButton } from \"./FavoriteButton\";\nimport { format as timeAgo } from \"timeago.js\";\nimport { Launch } from \"./Launch\";\nimport { ContentKind } from \"../utils/local-storage\";\nimport { LaunchPad } from \"./LaunchPad\";\nimport { randomColor } from \"../utils/random-color\";\nimport { useMemo } from \"react\";\nimport { useFavoritesContext } from \"../utils/favorites-context\";\n\ntype ItemKind =\n  | { kind: ContentKind.Launches; launch: Launch }\n  | { kind: ContentKind.LaunchPads; launchPad: LaunchPad };\n\ntype PreviewCardProps = {\n  item: ItemKind;\n  updateFavorites: (category: ContentKind, item: Launch | LaunchPad) => void;\n};\n\n// TODO: Create JSDoc for this component\nexport const PreviewCard = ({ item, updateFavorites }: PreviewCardProps) => {\n  const { favoritesContext } = useFavoritesContext();\n\n  const context =\n    item.kind === ContentKind.Launches\n      ? favoritesContext?.launches\n      : favoritesContext?.launch_pads;\n  // Avoid recalculating the color at every render\n  const randomGradient = useMemo(\n    () => `linear-gradient(${randomColor()}, ${randomColor()})`,\n    []\n  );\n\n  const bgImage =\n    item.kind === ContentKind.Launches\n      ? item.launch.links.flickr_images[0]?.replace(\"_o.jpg\", \"_z.jpg\") ??\n        item.launch.links.mission_patch_small\n      : null;\n\n  const background = bgImage ?? randomGradient;\n\n  return (\n    <Box\n      as={Link}\n      to={\n        item.kind === ContentKind.Launches\n          ? `/launches/${item.launch.flight_number}`\n          : `/launch-pads/${item.launchPad.site_id}`\n      }\n      boxShadow=\"md\"\n      borderWidth=\"1px\"\n      borderRadius=\"lg\"\n      overflow=\"hidden\"\n    >\n      <Flex\n        position=\"relative\"\n        p={[2, 6]}\n        height={\n          item.kind === ContentKind.Launches ? [\"200px\", null, \"300px\"] : \"80px\"\n        }\n        bgImage={background}\n        title={\n          item.kind === ContentKind.Launches\n            ? `${item.launch.mission_name} launch`\n            : `${item.launchPad.name} launch pad`\n        }\n        bgPos=\"bottom\"\n        bgSize=\"cover\"\n        backgroundRepeat=\"no-repeat\"\n        justifyContent=\"space-between\"\n        direction=\"column\"\n        boxSizing=\"border-box\"\n      >\n        <FavoriteButton\n          isFavorite={\n            context?.includes(\n              JSON.stringify(\n                item.kind === ContentKind.Launches\n                  ? item.launch\n                  : item.launchPad\n              )\n            ) ?? false\n          }\n          updateFavorites={() =>\n            item.kind === ContentKind.Launches\n              ? updateFavorites(ContentKind.Launches, item.launch)\n              : updateFavorites(ContentKind.LaunchPads, item.launchPad)\n          }\n        />\n        {item.kind === ContentKind.Launches &&\n          item.launch.links.mission_patch_small && (\n            <Image\n              position=\"absolute\"\n              top=\"5\"\n              right=\"5\"\n              src={item.launch.links.mission_patch_small}\n              height=\"75px\"\n              objectFit=\"contain\"\n              objectPosition=\"bottom\"\n            />\n          )}\n        {item.kind === ContentKind.Launches && !bgImage && (\n          <Text margin=\"auto\">Preview unavailable</Text>\n        )}\n      </Flex>\n      <Box p=\"6\">\n        <Box d=\"flex\" flexWrap=\"wrap\" alignItems=\"baseline\">\n          {item.kind === ContentKind.Launches ? (\n            <Badge\n              px=\"2\"\n              variant=\"solid\"\n              colorScheme={item.launch.launch_success ? \"green\" : \"red\"}\n              mr=\"2\"\n            >\n              {item.launch.launch_success ? \"Successful\" : \"Failed\"}\n            </Badge>\n          ) : (\n            <Badge\n              px=\"2\"\n              variant=\"solid\"\n              colorScheme={item.launchPad.status === \"active\" ? \"green\" : \"red\"}\n              mr=\"2\"\n            >\n              {item.launchPad.status === \"active\" ? \"Active\" : \"Retired\"}\n            </Badge>\n          )}\n          <Box\n            color=\"gray.500\"\n            fontWeight=\"semibold\"\n            letterSpacing=\"wide\"\n            fontSize=\"xs\"\n            textTransform=\"uppercase\"\n          >\n            {item.kind === ContentKind.Launches\n              ? `${item.launch.rocket.rocket_name} • ${item.launch.launch_site.site_name}`\n              : `${item.launchPad.attempted_launches} attempted • ${item.launchPad.successful_launches} succeeded`}\n          </Box>\n        </Box>\n        <Box\n          mt=\"1\"\n          fontWeight=\"semibold\"\n          as=\"h4\"\n          lineHeight=\"tight\"\n          isTruncated\n        >\n          {item.kind === ContentKind.Launches\n            ? item.launch.mission_name\n            : item.launchPad.name}\n        </Box>\n        <Flex flexWrap=\"wrap\">\n          {item.kind === ContentKind.Launches ? (\n            <>\n              <Text fontSize=\"sm\" mr=\"2\">\n                {formatDate(item.launch.launch_date_utc)}{\" \"}\n              </Text>\n              <Text color=\"gray.500\" fontSize=\"sm\">\n                {timeAgo(item.launch.launch_date_utc)}\n              </Text>\n            </>\n          ) : (\n            <Text color=\"gray.500\" fontSize=\"sm\">\n              {item.launchPad.vehicles_launched.join(\", \")}\n            </Text>\n          )}\n        </Flex>\n      </Box>\n    </Box>\n  );\n};\n","import { SimpleGrid } from \"@chakra-ui/react\";\nimport { Error } from \"./Error\";\nimport { Breadcrumbs } from \"./Breadcrumbs\";\nimport { LoadMoreButton } from \"./LoadMoreButton\";\nimport { useFavoritesContext } from \"../utils/favorites-context\";\nimport { ContentKind } from \"../utils/local-storage\";\nimport { Launch } from \"./Launch\";\nimport { PAGE_SIZE } from \"./App\";\nimport { PreviewCard } from \"./PreviewCard\";\nimport { SWRInfiniteResponseInterface } from \"swr\";\nimport { useEffect } from \"react\";\n\ntype LaunchesProps = {\n  launches: SWRInfiniteResponseInterface<Launch[], Error>;\n  isValidating: boolean;\n  loadMore: boolean;\n};\n\nexport const Launches = ({\n  launches,\n  isValidating,\n  loadMore,\n}: LaunchesProps) => {\n  const { updateFavorites } = useFavoritesContext();\n\n  useEffect(() => {\n    if (!isValidating) {\n      launches.setSize(launches.size + 1);\n    }\n  }, [loadMore]);\n\n  return (\n    <>\n      <Breadcrumbs\n        items={[{ label: \"Home\", to: \"/\" }, { label: \"Launches\" }]}\n      />\n      <SimpleGrid m={[2, null, 6]} minChildWidth=\"350px\" spacing=\"4\">\n        {launches.error && <Error />}\n        {launches.data &&\n          launches?.data.flat().map((launch: Launch) => (\n            <PreviewCard\n              key={launch.flight_number}\n              item={{ kind: ContentKind.Launches, launch }}\n              updateFavorites={() => {\n                updateFavorites(ContentKind.Launches, JSON.stringify(launch));\n              }}\n            />\n          ))}\n      </SimpleGrid>\n      <LoadMoreButton\n        loadMore={() => launches.setSize(launches.size + 1)}\n        data={launches.data}\n        pageSize={PAGE_SIZE}\n        isLoadingMore={isValidating}\n      />\n    </>\n  );\n};\n","import useSWR, { useSWRInfinite } from \"swr\";\n\nconst fetcher = async (args: RequestInfo) => {\n  const response = await fetch(args);\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n  return await response.json();\n};\n\nconst getSpaceXUrl = (\n  path: string | null,\n  options: {\n    [x: string]: unknown;\n    limit?: number;\n    order?: string | undefined;\n    sort?: string | undefined;\n    site_id?: string;\n    offset?: number;\n  }\n) => {\n  const searchParams = new URLSearchParams();\n  for (const property in options) {\n    searchParams.append(property, options[property] as string);\n  }\n\n  const spaceXApiBase = process.env.REACT_APP_SPACEX_API_URL;\n  return `${spaceXApiBase}${path}?${searchParams.toString()}`;\n};\n\nexport const useSpaceX = (\n  path: string | null,\n  options: { limit?: number; order?: string; sort?: string; site_id?: string }\n) => {\n  const endpointUrl = getSpaceXUrl(path, options);\n  return useSWR(path ? endpointUrl : null, fetcher);\n};\n\nexport const useSpaceXPaginated = (\n  path: string,\n  options: { limit: number; order?: string; sort?: string }\n) => {\n  return useSWRInfinite((pageIndex, previousPageData) => {\n    if (previousPageData && !previousPageData.length) {\n      return null;\n    }\n    return getSpaceXUrl(path, {\n      ...options,\n      offset: options.limit * pageIndex,\n    });\n  }, fetcher);\n};\n","import { useEffect, useState } from \"react\";\nimport { useParams, Link as RouterLink } from \"react-router-dom\";\nimport { format as timeAgo } from \"timeago.js\";\nimport { Watch, MapPin, Navigation, Layers, Info } from \"react-feather\";\nimport {\n  Flex,\n  Heading,\n  Badge,\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatHelpText,\n  SimpleGrid,\n  Box,\n  Text,\n  Spinner,\n  Image,\n  Link,\n  Stack,\n  AspectRatio,\n  StatGroup,\n  Tooltip,\n  Icon,\n} from \"@chakra-ui/react\";\nimport { useSpaceX } from \"../utils/use-space-x\";\nimport { formatDateTime, TimeZoneDisplayKind } from \"../utils/format-date\";\nimport { Error } from \"./Error\";\nimport { Breadcrumbs } from \"./Breadcrumbs\";\nimport { FavoriteButton } from \"./FavoriteButton\";\nimport { useFavoritesContext } from \"../utils/favorites-context\";\nimport { ContentKind } from \"../utils/local-storage\";\n\nexport type Launch = {\n  kind: \"launch\";\n  mission_name: string;\n  flight_number: number;\n  launch_success: string;\n  details: string;\n  launch_date_local: Date;\n  launch_date_utc: Date;\n  rocket: LaunchRocket;\n  launch_site: LaunchSite;\n  links: LaunchLinks;\n};\n\ntype RocketCores = {\n  core_serial: string;\n  land_success: boolean;\n};\n\ntype RocketPayload = {\n  payload_type: string;\n};\n\ntype LaunchRocket = {\n  rocket_name: string;\n  rocket_type: string;\n  first_stage: {\n    cores: RocketCores[];\n  };\n  second_stage: {\n    block: number;\n    payloads: RocketPayload[];\n  };\n};\n\ntype LaunchSite = {\n  site_id: string;\n  site_name: string;\n  site_name_long: string;\n};\n\ntype LaunchLinks = {\n  flickr_images: string[];\n  mission_patch_small: string;\n  youtube_id: string;\n};\n\ntype LaunchesResponse = {\n  data?: Launch;\n  error?: Error;\n};\n\nexport const Launch = () => {\n  const { favoritesContext, updateFavorites } = useFavoritesContext();\n  const [isFavorite, setIsFavorite] = useState(false);\n  const { launchId } = useParams();\n  const { data: launch, error }: LaunchesResponse = useSpaceX(\n    `/launches/${launchId}`,\n    {}\n  );\n\n  // TODO Silly, refactor\n  useEffect(() => {\n    if (favoritesContext?.launches && launch) {\n      setIsFavorite(favoritesContext.launches.includes(JSON.stringify(launch)));\n    } else {\n      setIsFavorite(false);\n    }\n  }, [favoritesContext]);\n\n  if (error) return <Error />;\n\n  if (!launch) {\n    return (\n      <Flex justifyContent=\"center\" alignItems=\"center\" minHeight=\"50vh\">\n        <Spinner size=\"lg\" />\n      </Flex>\n    );\n  }\n\n  return (\n    <>\n      <Breadcrumbs\n        items={[\n          { label: \"Home\", to: \"/\" },\n          { label: \"Launches\", to: \"/launches\" },\n          { label: `#${launch.flight_number}` },\n        ]}\n      />\n      <LaunchHeader\n        launch={launch}\n        isFavorite={isFavorite}\n        updateFavorites={() => {\n          updateFavorites(ContentKind.Launches, JSON.stringify(launch));\n        }}\n      />\n      <Box m={[3, 6]}>\n        <TimeAndLocation launch={launch} />\n        <RocketInfo launch={launch} />\n        <Text color=\"gray.700\" fontSize={[\"md\", null, \"lg\"]} my=\"8\">\n          {launch.details}\n        </Text>\n        <Video launch={launch} />\n        <Gallery images={launch.links.flickr_images} />\n      </Box>\n    </>\n  );\n};\n\ntype LaunchHeaderProps = {\n  launch: Launch;\n  isFavorite: boolean;\n  updateFavorites: () => void;\n};\n\nconst LaunchHeader = ({\n  launch,\n  isFavorite,\n  updateFavorites,\n}: LaunchHeaderProps) => {\n  return (\n    <Flex\n      bgImage={`url(${launch.links.flickr_images[0]})`}\n      bgPos=\"center\"\n      bgSize=\"cover\"\n      backgroundRepeat=\"no-repeat\"\n      minHeight=\"30vh\"\n      position=\"relative\"\n      p={[2, 6]}\n      justifyContent=\"space-between\"\n      direction=\"column\"\n    >\n      <FavoriteButton\n        isFavorite={isFavorite}\n        updateFavorites={updateFavorites}\n      />\n      <Flex\n        direction=\"row\"\n        alignItems=\"flex-end\"\n        justifyContent=\"space-between\"\n      >\n        <Image\n          position=\"absolute\"\n          top=\"5\"\n          right=\"5\"\n          src={launch.links.mission_patch_small}\n          height={[\"85px\", \"150px\"]}\n          objectFit=\"contain\"\n          objectPosition=\"bottom\"\n        />\n        <Heading\n          color=\"white\"\n          display=\"inline\"\n          backgroundColor=\"#718096b8\"\n          fontSize={[\"lg\", \"5xl\"]}\n          px=\"4\"\n          py=\"2\"\n          borderRadius=\"lg\"\n        >\n          {launch.mission_name}\n        </Heading>\n        <Stack isInline spacing=\"3\">\n          <Badge colorScheme=\"purple\" fontSize={[\"xs\", \"md\"]}>\n            #{launch.flight_number}\n          </Badge>\n          {launch.launch_success ? (\n            <Badge colorScheme=\"green\" fontSize={[\"xs\", \"md\"]}>\n              Successful\n            </Badge>\n          ) : (\n            <Badge colorScheme=\"red\" fontSize={[\"xs\", \"md\"]}>\n              Failed\n            </Badge>\n          )}\n        </Stack>\n      </Flex>\n    </Flex>\n  );\n};\n\ntype TimeAndLocationProps = {\n  launch: Launch;\n};\n\nconst TimeAndLocation = ({ launch }: TimeAndLocationProps) => {\n  const [tooltipIsOpen, setTooltipIsOpen] = useState(false);\n  const launchDateUserTime = formatDateTime({\n    kind: TimeZoneDisplayKind.user,\n    timestamp: launch.launch_date_local,\n  });\n  return (\n    <SimpleGrid columns={[1, 1, 2]} borderWidth=\"1px\" p=\"4\" borderRadius=\"md\">\n      <Stat>\n        <StatLabel display=\"flex\">\n          <Box as={Watch} width=\"1em\" />{\" \"}\n          <Box ml=\"2\" as=\"span\">\n            Launch Date\n          </Box>\n        </StatLabel>\n        <StatNumber display=\"inline\" fontSize={[\"md\", \"xl\"]}>\n          {formatDateTime({\n            kind: TimeZoneDisplayKind.local,\n            timestamp: launch.launch_date_local,\n            launchSite: launch.launch_site.site_id,\n          })}\n          <Tooltip hasArrow isOpen={tooltipIsOpen} label={launchDateUserTime}>\n            <Icon\n              alt={launchDateUserTime}\n              onMouseEnter={() => setTooltipIsOpen(true)}\n              onMouseLeave={() => setTooltipIsOpen(false)}\n              onTouchEnd={() => setTooltipIsOpen(!tooltipIsOpen)}\n              marginLeft=\"0.2em\"\n            >\n              <Info />\n            </Icon>\n          </Tooltip>\n        </StatNumber>\n        <StatHelpText>{timeAgo(launch.launch_date_utc)}</StatHelpText>\n      </Stat>\n      <Stat>\n        <StatLabel display=\"flex\">\n          <Box as={MapPin} width=\"1em\" />{\" \"}\n          <Box ml=\"2\" as=\"span\">\n            Launch Site\n          </Box>\n        </StatLabel>\n        <StatNumber fontSize={[\"md\", \"xl\"]}>\n          <Link\n            as={RouterLink}\n            to={`/launch-pads/${launch.launch_site.site_id}`}\n          >\n            {launch.launch_site.site_name_long}\n          </Link>\n        </StatNumber>\n        <StatHelpText>{launch.launch_site.site_name}</StatHelpText>\n      </Stat>\n    </SimpleGrid>\n  );\n};\n\ntype RocketInfoProps = {\n  launch: Launch;\n};\n\nconst RocketInfo = ({ launch }: RocketInfoProps) => {\n  const cores = launch.rocket.first_stage.cores;\n\n  return (\n    <SimpleGrid\n      columns={[1, 1, 2]}\n      borderWidth=\"1px\"\n      mt=\"4\"\n      p=\"4\"\n      borderRadius=\"md\"\n    >\n      <Stat>\n        <StatLabel display=\"flex\">\n          <Box as={Navigation} width=\"1em\" />{\" \"}\n          <Box ml=\"2\" as=\"span\">\n            Rocket\n          </Box>\n        </StatLabel>\n        <StatNumber fontSize={[\"md\", \"xl\"]}>\n          {launch.rocket.rocket_name}\n        </StatNumber>\n        <StatHelpText>{launch.rocket.rocket_type}</StatHelpText>\n      </Stat>\n      <StatGroup>\n        <Stat>\n          <StatLabel display=\"flex\">\n            <Box as={Layers} width=\"1em\" />{\" \"}\n            <Box ml=\"2\" as=\"span\">\n              First Stage\n            </Box>\n          </StatLabel>\n          <StatNumber fontSize={[\"md\", \"xl\"]}>\n            {cores.map((core: RocketCores) => core.core_serial).join(\", \")}\n          </StatNumber>\n          <StatHelpText>\n            {cores.every((core: RocketCores) => core.land_success)\n              ? cores.length === 1\n                ? \"Recovered\"\n                : \"All recovered\"\n              : \"Lost\"}\n          </StatHelpText>\n        </Stat>\n        <Stat>\n          <StatLabel display=\"flex\">\n            <Box as={Layers} width=\"1em\" />{\" \"}\n            <Box ml=\"2\" as=\"span\">\n              Second Stage\n            </Box>\n          </StatLabel>\n          <StatNumber fontSize={[\"md\", \"xl\"]}>\n            Block {launch.rocket.second_stage.block}\n          </StatNumber>\n          <StatHelpText>\n            Payload:{\" \"}\n            {launch.rocket.second_stage.payloads\n              .map((payload: RocketPayload) => payload.payload_type)\n              .join(\", \")}\n          </StatHelpText>\n        </Stat>\n      </StatGroup>\n    </SimpleGrid>\n  );\n};\n\ntype VideoProps = {\n  launch: Launch;\n};\n\nconst Video = ({ launch }: VideoProps) => {\n  return (\n    <AspectRatio maxH=\"400px\" ratio={1.7}>\n      <Box\n        as=\"iframe\"\n        title={launch.mission_name}\n        src={`https://www.youtube.com/embed/${launch.links.youtube_id}`}\n        allowFullScreen\n      />\n    </AspectRatio>\n  );\n};\n\ntype GalleryProps = {\n  images: LaunchLinks[\"flickr_images\"];\n};\n\nconst Gallery = ({ images }: GalleryProps) => {\n  return (\n    <SimpleGrid my=\"6\" minChildWidth=\"350px\" spacing=\"4\">\n      {images.map((image: string) => (\n        <a href={image} key={image}>\n          <Image src={image.replace(\"_o.jpg\", \"_z.jpg\")} />\n        </a>\n      ))}\n    </SimpleGrid>\n  );\n};\n","import { Box, SimpleGrid } from \"@chakra-ui/react\";\nimport { Error } from \"./Error\";\nimport { Breadcrumbs } from \"./Breadcrumbs\";\nimport { LoadMoreButton } from \"./LoadMoreButton\";\nimport { ContentKind } from \"../utils/local-storage\";\nimport { useFavoritesContext } from \"../utils/favorites-context\";\nimport { PAGE_SIZE } from \"./App\";\nimport { LaunchPad } from \"./LaunchPad\";\nimport { PreviewCard } from \"./PreviewCard\";\nimport { SWRInfiniteResponseInterface } from \"swr\";\nimport { useEffect } from \"react\";\n\ntype LaunchPadsProps = {\n  launchPads: SWRInfiniteResponseInterface<LaunchPad[], Error>;\n  isValidating: boolean;\n  loadMore: boolean;\n};\n\nexport const LaunchPads = ({\n  launchPads,\n  loadMore,\n  isValidating,\n}: LaunchPadsProps) => {\n  const { updateFavorites } = useFavoritesContext();\n\n  useEffect(() => {\n    if (!isValidating) {\n      launchPads.setSize(launchPads.size + 1);\n    }\n  }, [loadMore]);\n\n  return (\n    <Box>\n      <Breadcrumbs\n        items={[{ label: \"Home\", to: \"/\" }, { label: \"Launch Pads\" }]}\n      />\n      <SimpleGrid m={[2, null, 6]} minChildWidth=\"350px\" spacing=\"4\">\n        {launchPads.error && <Error />}\n        {launchPads.data &&\n          launchPads?.data.flat().map((launchPad: LaunchPad) => (\n            <PreviewCard\n              key={launchPad.site_id}\n              item={{ kind: ContentKind.LaunchPads, launchPad }}\n              updateFavorites={() => {\n                updateFavorites(\n                  ContentKind.LaunchPads,\n                  JSON.stringify(launchPad)\n                );\n              }}\n            />\n          ))}\n      </SimpleGrid>\n      <LoadMoreButton\n        loadMore={() => launchPads.setSize(launchPads.size + 1)}\n        data={launchPads.data}\n        pageSize={PAGE_SIZE}\n        isLoadingMore={isValidating}\n      />\n    </Box>\n  );\n};\n","import { useParams } from \"react-router-dom\";\nimport { MapPin, Navigation } from \"react-feather\";\nimport {\n  Flex,\n  Heading,\n  Badge,\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatHelpText,\n  SimpleGrid,\n  Box,\n  Text,\n  Spinner,\n  Stack,\n  AspectRatio,\n} from \"@chakra-ui/react\";\nimport { useSpaceX } from \"../utils/use-space-x\";\nimport { Error } from \"./Error\";\nimport { Breadcrumbs } from \"./Breadcrumbs\";\nimport { Launch } from \"./Launch\";\nimport { FavoriteButton } from \"./FavoriteButton\";\nimport { useFavoritesContext } from \"../utils/favorites-context\";\nimport { Fragment, useEffect, useMemo, useState } from \"react\";\nimport { ContentKind } from \"../utils/local-storage\";\nimport { randomColor } from \"../utils/random-color\";\nimport { PreviewCard } from \"./PreviewCard\";\n\ntype Location = {\n  name: string;\n  region: string;\n  latitude: number;\n  longitude: number;\n};\n\nexport type LaunchPad = {\n  kind: \"launchpad\";\n  name: string;\n  status: string;\n  location: Location;\n  site_name_long: string;\n  vehicles_launched: string[];\n  attempted_launches: number;\n  successful_launches: number;\n  details: string;\n  site_id: string;\n};\n\ntype LaunchPadsResponse = {\n  data?: LaunchPad;\n  error?: Error;\n};\n\nexport const LaunchPad = () => {\n  const { launchPadId } = useParams();\n  const { data: launchPad, error: launchPadError }: LaunchPadsResponse =\n    useSpaceX(`/launchpads/${launchPadId}`, {});\n  const { data: pastLaunches, error: pastLaunchesError } = useSpaceX(\n    launchPad ? \"/launches/past\" : null,\n    {\n      limit: 3,\n      order: \"desc\",\n      sort: \"launch_date_utc\",\n      site_id: launchPad?.site_id,\n    }\n  );\n\n  if (launchPadError || pastLaunchesError) return <Error />;\n  if (!launchPad) {\n    return (\n      <Flex justifyContent=\"center\" alignItems=\"center\" minHeight=\"50vh\">\n        <Spinner size=\"lg\" />\n      </Flex>\n    );\n  }\n\n  return (\n    <Box>\n      <Breadcrumbs\n        items={[\n          { label: \"Home\", to: \"/\" },\n          { label: \"Launch Pads\", to: \"/launch-pads\" },\n          { label: launchPad.name },\n        ]}\n      />\n      <LaunchPadHeader launchPad={launchPad} />\n      <Box m={[3, 6]}>\n        <LocationAndVehicles launchPad={launchPad} />\n        <Text color=\"gray.700\" fontSize={[\"md\", null, \"lg\"]} my=\"8\">\n          {launchPad.details}\n        </Text>\n        <Map location={launchPad.location} />\n        {pastLaunches && <RecentLaunches launches={pastLaunches} />}\n      </Box>\n    </Box>\n  );\n};\n\ntype LaunchPadHeaderProps = {\n  launchPad: LaunchPad;\n};\n\nexport const LaunchPadHeader = ({ launchPad }: LaunchPadHeaderProps) => {\n  const { favoritesContext, updateFavorites } = useFavoritesContext();\n  const [isFavorite, setIsFavorite] = useState(false);\n  const randomGradient = useMemo(\n    () => `linear-gradient(${randomColor()}, ${randomColor()})`,\n    []\n  );\n\n  // TODO Silly, refactor\n  useEffect(() => {\n    if (favoritesContext?.launch_pads) {\n      setIsFavorite(\n        favoritesContext.launch_pads.includes(JSON.stringify(launchPad))\n      );\n    } else {\n      setIsFavorite(false);\n    }\n  }, [favoritesContext]);\n  return (\n    <Flex\n      background={randomGradient}\n      bgPos=\"center\"\n      bgSize=\"cover\"\n      backgroundRepeat=\"no-repeat\"\n      minHeight=\"15vh\"\n      position=\"relative\"\n      p={[2, 6]}\n      justifyContent=\"space-between\"\n      direction=\"column\"\n    >\n      <FavoriteButton\n        isFavorite={isFavorite}\n        updateFavorites={() => {\n          updateFavorites(ContentKind.LaunchPads, JSON.stringify(launchPad));\n        }}\n      />\n      <Flex\n        direction=\"row\"\n        alignItems=\"flex-end\"\n        justifyContent=\"space-between\"\n      >\n        <Heading\n          color=\"gray.900\"\n          display=\"inline\"\n          px=\"4\"\n          py=\"2\"\n          fontSize={[\"md\", \"3xl\"]}\n          borderRadius=\"lg\"\n        >\n          {launchPad.site_name_long}\n        </Heading>\n        <Stack isInline spacing=\"3\">\n          <Badge colorScheme=\"purple\" fontSize={[\"sm\", \"md\"]}>\n            {launchPad.successful_launches}/{launchPad.attempted_launches}{\" \"}\n            successful\n          </Badge>\n          {launchPad.status === \"active\" ? (\n            <Badge colorScheme=\"green\" fontSize={[\"sm\", \"md\"]}>\n              Active\n            </Badge>\n          ) : (\n            <Badge colorScheme=\"red\" fontSize={[\"sm\", \"md\"]}>\n              Retired\n            </Badge>\n          )}\n        </Stack>\n      </Flex>\n    </Flex>\n  );\n};\n\ntype LocationAndVehiclesProps = {\n  launchPad: LaunchPad;\n};\n\nconst LocationAndVehicles = ({ launchPad }: LocationAndVehiclesProps) => {\n  return (\n    <SimpleGrid columns={[1, 1, 2]} borderWidth=\"1px\" p=\"4\" borderRadius=\"md\">\n      <Stat>\n        <StatLabel display=\"flex\">\n          <Box as={MapPin} width=\"1em\" />{\" \"}\n          <Box ml=\"2\" as=\"span\">\n            Location\n          </Box>\n        </StatLabel>\n        <StatNumber fontSize=\"xl\">{launchPad.location.name}</StatNumber>\n        <StatHelpText>{launchPad.location.region}</StatHelpText>\n      </Stat>\n      <Stat>\n        <StatLabel display=\"flex\">\n          <Box as={Navigation} width=\"1em\" />{\" \"}\n          <Box ml=\"2\" as=\"span\">\n            Vehicles launched\n          </Box>\n        </StatLabel>\n        <StatNumber fontSize=\"xl\">\n          {launchPad.vehicles_launched.map((vehicle) => (\n            <Fragment>\n              {vehicle}\n              <br />\n            </Fragment>\n          ))}\n        </StatNumber>\n      </Stat>\n    </SimpleGrid>\n  );\n};\n\ntype MapProps = {\n  location: Location;\n};\n\nconst Map = ({ location }: MapProps) => {\n  return (\n    <AspectRatio ratio={16 / 5}>\n      <Box\n        as=\"iframe\"\n        src={`https://maps.google.com/maps?q=${location.latitude}, ${location.longitude}&z=15&output=embed`}\n      />\n    </AspectRatio>\n  );\n};\n\ntype RecentLaunchesProps = {\n  launches: Launch[][];\n};\n\nconst RecentLaunches = ({ launches }: RecentLaunchesProps) => {\n  if (!launches?.length) {\n    return null;\n  }\n  return (\n    <Stack my=\"8\" spacing=\"3\">\n      <Text fontSize=\"xl\" fontWeight=\"bold\">\n        Last launches\n      </Text>\n      <SimpleGrid minChildWidth=\"350px\" spacing=\"4\">\n        {launches.flat().map((launch: Launch) => (\n          <PreviewCard\n            key={launch.flight_number}\n            item={{ kind: ContentKind.Launches, launch }}\n            updateFavorites={() => null}\n          />\n        ))}\n      </SimpleGrid>\n    </Stack>\n  );\n};\n","import { useContext, useRef, useState } from \"react\";\nimport {\n  useDisclosure,\n  Button,\n  Drawer,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerCloseButton,\n  DrawerHeader,\n  DrawerBody,\n  Input,\n  Icon,\n  Text,\n  SimpleGrid,\n} from \"@chakra-ui/react\";\nimport { Star } from \"react-feather\";\nimport { FavoritesContext } from \"../utils/favorites-context\";\nimport { ContentKind } from \"../utils/local-storage\";\nimport { PreviewCard } from \"./PreviewCard\";\n\nexport const FavoritesDrawer = () => {\n  const { favoritesContext, updateFavorites } = useContext(FavoritesContext);\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [revealText, setRevealText] = useState(false);\n  const [input, setInput] = useState(\"\");\n  const btnRef = useRef(null);\n\n  const favoriteLaunches = favoritesContext?.launches\n    ?.filter(\n      (item: string) => item.toLowerCase().search(input.toLowerCase()) !== -1\n    )\n    // Show latest favorite at the top\n    .reverse();\n  const favoriteLaunchpads = favoritesContext?.launch_pads\n    ?.filter(\n      (item: string) => item.toLowerCase().search(input.toLowerCase()) !== -1\n    )\n    // Show latest favorite at the top\n    .reverse();\n\n  if (!favoriteLaunches && !favoriteLaunchpads) {\n    return null;\n  }\n\n  return (\n    <>\n      <Button\n        ref={btnRef}\n        colorScheme=\"gray\"\n        onClick={onOpen}\n        color=\"black\"\n        display=\"flex\"\n        justifyContent=\"flex-start\"\n        // TODO Achtung, magic number!\n        width={revealText ? \"100%\" : \"38px\"}\n        maxWidth=\"max-content\"\n        onMouseEnter={() => setRevealText(true)}\n        onMouseLeave={() => setRevealText(false)}\n        transition=\"width 0.2s\"\n        size=\"sm\"\n      >\n        <Icon display=\"inline\">\n          <Star fill=\"gold\" />\n        </Icon>\n        <Text paddingLeft=\"0.5em\">{revealText && \"Open Favorites\"}</Text>\n      </Button>\n      <Drawer\n        isOpen={isOpen}\n        placement=\"right\"\n        onClose={onClose}\n        finalFocusRef={btnRef}\n      >\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerCloseButton />\n          <DrawerHeader fontSize=\"2xl\">Favorites</DrawerHeader>\n          <DrawerBody>\n            <Input\n              onChange={(e) => {\n                setInput(e.target.value);\n              }}\n              placeholder=\"Start typing to filter...\"\n            />\n            {favoriteLaunches && (\n              <Text\n                fontSize=\"xl\"\n                fontWeight=\"bold\"\n                m=\"1em 0\"\n              >{`Launches (${favoriteLaunches.length})`}</Text>\n            )}\n            <SimpleGrid spacing=\"4\">\n              {favoriteLaunches?.map((launch) => {\n                const flightNumber = JSON.parse(launch).flight_number;\n                return (\n                  <PreviewCard\n                    key={flightNumber}\n                    item={{\n                      kind: ContentKind.Launches,\n                      launch: JSON.parse(launch),\n                    }}\n                    updateFavorites={() =>\n                      updateFavorites(ContentKind.Launches, launch)\n                    }\n                  ></PreviewCard>\n                );\n              })}\n            </SimpleGrid>\n            {favoriteLaunchpads && (\n              <Text\n                fontSize=\"xl\"\n                fontWeight=\"bold\"\n                m=\"1em 0\"\n              >{`Launch Pads (${favoriteLaunchpads.length})`}</Text>\n            )}\n            <SimpleGrid spacing=\"4\">\n              {favoriteLaunchpads?.map((launchPad) => {\n                const siteId = JSON.parse(launchPad).site_id;\n                return (\n                  <PreviewCard\n                    key={siteId}\n                    item={{\n                      kind: ContentKind.LaunchPads,\n                      launchPad: JSON.parse(launchPad),\n                    }}\n                    updateFavorites={() =>\n                      updateFavorites(ContentKind.LaunchPads, launchPad)\n                    }\n                  ></PreviewCard>\n                );\n              })}\n            </SimpleGrid>\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n};\n","import { Flex, Text } from \"@chakra-ui/react\";\nimport { FC } from \"react\";\n\nexport const Navbar: FC = ({ children }) => {\n  return (\n    <Flex\n      as=\"nav\"\n      align=\"center\"\n      justify=\"space-between\"\n      wrap=\"wrap\"\n      padding=\"6\"\n      bg=\"gray.800\"\n      color=\"white\"\n    >\n      <Text\n        fontFamily=\"mono\"\n        letterSpacing=\"2px\"\n        fontWeight=\"bold\"\n        fontSize=\"lg\"\n      >\n        ¡SPACE·R0CKETS!\n      </Text>\n      {children}\n    </Flex>\n  );\n};\n","import { Route, Routes } from \"react-router-dom\";\nimport { Box } from \"@chakra-ui/react\";\nimport { Home } from \"./Home\";\nimport { Launches } from \"./Launches\";\nimport { Launch } from \"./Launch\";\nimport { LaunchPads } from \"./LaunchPads\";\nimport { LaunchPad } from \"./LaunchPad\";\nimport { FavoritesDrawer } from \"./FavoritesDrawer\";\nimport { Navbar } from \"./Navbar\";\nimport { useSpaceXPaginated } from \"../utils/use-space-x\";\nimport { FavoritesContext } from \"../utils/favorites-context\";\nimport { useEffect, useRef, useState } from \"react\";\nimport {\n  Favorites,\n  getFromLocalStorage,\n  FAVORITES,\n  ContentKind,\n  updateLocalStorage,\n} from \"../utils/local-storage\";\nimport { SWRInfiniteResponseInterface } from \"swr\";\n\nexport const PAGE_SIZE = 12;\n\nexport const App = () => {\n  const [favorites, setFavorites] = useState<Favorites>(\n    getFromLocalStorage(FAVORITES)\n  );\n  const [loadMore, setLoadMore] = useState(false);\n  const mainContainer = useRef<HTMLDivElement>(null);\n\n  const launches: SWRInfiniteResponseInterface<Launch[], Error> =\n    useSpaceXPaginated(\"/launches/past\", {\n      limit: PAGE_SIZE,\n      order: \"desc\",\n      sort: \"launch_date_utc\",\n    });\n\n  const launchPads: SWRInfiniteResponseInterface<LaunchPad[], Error> =\n    useSpaceXPaginated(\"/launchpads\", {\n      limit: PAGE_SIZE,\n    });\n\n  const handleScroll = () => {\n    if (mainContainer.current) {\n      const windowHeight = window.innerHeight;\n      const bottomOfWindow = windowHeight + window.scrollY;\n      const bottomOfContent = mainContainer.current.offsetHeight;\n\n      const isReachingBottom = bottomOfWindow >= bottomOfContent - windowHeight;\n\n      if (isReachingBottom) {\n        setLoadMore(true);\n      } else {\n        setLoadMore(false);\n      }\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n\n  return (\n    <Box ref={mainContainer}>\n      <FavoritesContext.Provider\n        value={{\n          favoritesContext: favorites,\n          updateFavorites: (category: ContentKind, item: string) => {\n            updateLocalStorage(category, item);\n            setFavorites(getFromLocalStorage(FAVORITES));\n          },\n        }}\n      >\n        <Navbar>{favorites && <FavoritesDrawer />}</Navbar>\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route\n            path=\"/launches\"\n            element={\n              launches && (\n                <Launches\n                  launches={launches}\n                  isValidating={launches.isValidating}\n                  loadMore={loadMore}\n                />\n              )\n            }\n          />\n          <Route path=\"/launches/:launchId\" element={<Launch />} />\n          <Route\n            path=\"/launch-pads\"\n            element={\n              launchPads && (\n                <LaunchPads\n                  launchPads={launchPads}\n                  isValidating={launchPads.isValidating}\n                  loadMore={loadMore}\n                />\n              )\n            }\n          />\n          <Route path=\"/launch-pads/:launchPadId\" element={<LaunchPad />} />\n        </Routes>\n      </FavoritesContext.Provider>\n    </Box>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ChakraProvider, CSSReset } from \"@chakra-ui/react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { App } from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <ChakraProvider>\n        <CSSReset />\n        <App />\n      </ChakraProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}